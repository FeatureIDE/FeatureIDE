<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="JAR Build Script" default="build" basedir=".">

	<!-- Set JAR name -->
	<property name="build.jar.version" value="3.6.2" />
	<property name="build.jar.name" value="de.ovgu.featureide.lib.fm-v${build.jar.version}.jar" />

	<!-- Constants -->
	<property name="base.dir" value=".." />
	<property name="src.dir" value="${base.dir}/src" />
	<property name="lib.dir" value="${base.dir}/lib" />
	<property name="license.path" value="${base.dir}/license.txt" />

	<property name="build.dir" value="." />
	<property name="build.bin.dir" value="${build.dir}/bin" />
	<property name="build.excludes.path" value="${build.dir}/excluded_source_files.txt" />
	<property name="build.jar.dir" value="${build.dir}/jar" />
	<property name="build.jar.lib.dir" value="${build.jar.dir}/lib" />
	<property name="build.jar.path" value="${build.jar.dir}/${build.jar.name}" />
	<property name="build.version.name" value="version.txt" />
	<property name="build.version.path" value="${build.bin.dir}/${build.version.name}" />

	<condition property="exist-custom-properties">
		<available file="build_jar.properties" />
	</condition>

	<target name="load-custom-properties" if="exist-custom-properties">
		<property file="build_jar.properties" />
	</target>

	<!-- Delete temp build folder -->
	<target name="clean" description="Delete the Build Folder">
		<delete dir="${build.bin.dir}" />
		<delete dir="${build.jar.dir}" />
	</target>

	<target name="compile" description="Compile Sources" depends="load-custom-properties">

		<property name="bin.javac.path" value="${bin.javac.path.default}" />

		<!-- Create folders, if they do not exist yet -->
		<mkdir dir="${build.bin.dir}" />
		<mkdir dir="${build.jar.dir}" />
		<mkdir dir="${build.jar.lib.dir}" />
		
		<copy todir="${build.jar.lib.dir}">
			<fileset dir="${lib.dir}" includes="**/*.jar" />
		</copy>

		<!-- Get all libraries in lib folder -->
		<path id="classpath">
			<fileset dir="${lib.dir}" includes="*.jar" />
		</path>
		<pathconvert property="jar.class.path" pathsep=" ">
			<path refid="classpath"/>
			<mapper>
				<chainedmapper>
				   <flattenmapper/>
				   <globmapper from="*.jar" to="lib/*.jar"/>
				</chainedmapper>
			</mapper>
		</pathconvert>
		
		<!-- Compile the src folder -->
		<javac
			srcdir="${src.dir}"
			destdir="${build.bin.dir}"
			classpathref="classpath"
			excludesfile="${build.excludes.path}"
			debug="on" includeantruntime="false" fork="yes"
			source="1.8" target="1.8">
			<compilerarg value="-Xlint" />
		</javac>

		<!-- Calculate checksum for .class files -->
		<checksum algorithm="SHA-256" totalproperty="build.checksum" forceoverwrite="yes">
			<fileset dir="${build.bin.dir}">
				<exclude name="**/*.SHA-256" />
				<exclude name="${build.version.name}" />
			</fileset>
		</checksum>

		<!-- Get current timestamp -->
		<tstamp>
			<format property="timeStamp" pattern="yyyy/MM/dd HH-mm-ss" />
		</tstamp>

		<!-- Create version file -->
		<echo file="${build.version.path}" append="false">FeatureIDE Version:	${build.jar.version}${line.separator}Build Time:         ${timeStamp}${line.separator}Checksum (SHA-256): ${build.checksum}${line.separator}</echo>

	</target>

	<!-- Build jar file, including source files and license file -->
	<target name="build" description="Compile and Build JAR" depends="compile">
		<jar destfile="${build.jar.path}" basedir="${build.bin.dir}" excludes="**/*.SHA-256" compress="true">
			<fileset dir="${src.dir}" includes="**/*.java" excludesfile="${build.excludes.path}" />
			<fileset file="${license.path}" />
			<manifest>
                <attribute name="Main-Class" value="de.ovgu.featureide.fm.core.cli.FeatureIDECLI"/>
                <attribute name="Class-Path" value="${jar.class.path}"/>
            </manifest>
		</jar>
	</target>

	<!-- Alternative: Remove files from classpath -->
	<target name="deleteFiles" description="Delete all files with eclipse dependencies (For testing purposes only!)">
		<delete>
			<fileset dir="${src.dir}" includesfile="${build.excludes.path}" />
		</delete>
	</target>

</project>
