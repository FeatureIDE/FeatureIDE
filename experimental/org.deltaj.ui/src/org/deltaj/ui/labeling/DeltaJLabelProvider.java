/*
* generated by Xtext
*/
package org.deltaj.ui.labeling;

import org.deltaj.deltaj.ClassAddition;
import org.deltaj.deltaj.FieldAddition;
import org.deltaj.deltaj.MethodAddition;
import org.deltaj.deltaj.Configuration;
import org.deltaj.deltaj.Configurations;
import org.deltaj.deltaj.DeltaModule;
import org.deltaj.deltaj.ModuleReference;
import org.deltaj.deltaj.PartitionPart;
import org.deltaj.deltaj.DeltaPartition;
import org.deltaj.deltaj.Feature;
import org.deltaj.deltaj.Features;
import org.deltaj.deltaj.Field;
import org.deltaj.deltaj.Method;
import org.deltaj.deltaj.ClassModification;
import org.deltaj.deltaj.MethodModification;
import org.deltaj.deltaj.Product;
import org.deltaj.deltaj.Program;
import org.deltaj.deltaj.ClassRemoval;
import org.deltaj.deltaj.FieldRemoval;
import org.deltaj.deltaj.MethodRemoval;
import org.deltaj.deltaj.ProductLine;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.swt.graphics.Image;
import org.eclipse.xtext.ui.IImageHelper;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;

import com.google.inject.Inject;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class DeltaJLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	private IImageHelper imageHelper;
	
	@Inject
	public DeltaJLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	// ------------------------------ TOP LEVEL ------------------------------ //

	protected Image image(Program program) {
		return imageHelper.getImage("program.gif");
	}

	protected Image image(DeltaModule delta) {
		return imageHelper.getImage("triangle.png");
	}

	protected Image image(ProductLine splSpecification) {
		return imageHelper.getImage("product_line.png");
	}

	protected Image image(Product product) {
		return imageHelper.getImage("product.png");
	}
	
	// ------------------------------ FEATURES ------------------------------ //

	protected String text(Features features) {
		return "Features";
	}
	
	protected Image image(Features features) {
		return imageHelper.getImage("features.png");
	}

	protected String text(Feature feature) {
		return feature.getName();
	}
	
	protected Image image(Feature feature) {
		return imageHelper.getImage("features.png");
	}
	
	// ------------------------------ CONFIGURATIONS ------------------------------ //
	
	protected String text(Configurations configurations) {
		return "Configurations";
	}
	
	protected Image image(Configurations configurations) {
		return imageHelper.getImage("configurations.png");
	}
	
	protected String text(Configuration configuration) {
		return "Configuration";
	}
	
	protected Image image(Configuration configuration) {
		return imageHelper.getImage("configurations.png");
	}
	
	// ------------------------------ PARTITION ------------------------------ //

	protected String text(DeltaPartition deltaSpecifications) {
		return "Partition";
	}
	
	protected Image image(DeltaPartition deltaSpecifications) {
		return imageHelper.getImage("partition.png");
	}
	
	protected String text(PartitionPart deltaSpecification) {
		return "Part";
	}
	
	protected Image image(PartitionPart deltaSpecification) {
		return imageHelper.getImage("partition.png");
	}
	
	protected String text(ModuleReference deltaModule) {
		return deltaModule.getDeltaModule().getName();
	}
	
	protected Image image(ModuleReference deltaModule) {
		return imageHelper.getImage("triangle.png");
	}
	
	// ------------------------------ CLASS ACTIONS ------------------------------ //
	
	protected String text(ClassAddition addsClass) {
		return addsClass.getClass_().getName();
	}

	protected Image image(ClassAddition addsClass) {
		return imageHelper.getImage("action_add.png");
	}
	
	protected String text(ClassModification modifiesClass) {
		return modifiesClass.getName();
	}

	protected Image image(ClassModification modifiesClass) {
		return imageHelper.getImage("action_modify.png");
	}
	
	protected String text(ClassRemoval removesClass) {
		return removesClass.getName();
	}

	protected Image image(ClassRemoval removesClass) {
		return imageHelper.getImage("action_remove.png");
	}
	
	// ------------------------------ METHOD ACTIONS ------------------------------ //

	protected String text(Method method) {
		return String.format("%s()", method.getName());
	}

	protected Image image(Method method) {
		return imageHelper.getImage("method.gif");
	}

	protected String text(MethodAddition addsMethod) {
		return String.format("%s()", addsMethod.getMethod().getName());
	}

	protected Image image(MethodAddition addsMethod) {
		return imageHelper.getImage("action_add.png");
	}
	
	protected String text(MethodModification modifiesMethod) {
		return String.format("%s()", modifiesMethod.getMethod().getName());
	}
	
	protected Image image(MethodModification modifiesMethod) {
		return imageHelper.getImage("action_modify.png");
	}
	
	protected String text(MethodRemoval removesMethod) {
		return String.format("%s()", removesMethod.getName());
	}

	protected Image image(MethodRemoval removesMethod) {
		return imageHelper.getImage("action_remove.png");
	}
	
	// ------------------------------ FIELD ACTIONS ------------------------------ //

	protected String text(Field field) {
		return field.getName();
	}

	protected Image image(Field field) {
		return imageHelper.getImage("field.gif");
	}

	protected String text(FieldAddition addsField) {
		return addsField.getField().getName();
	}
	
	protected Image image(FieldAddition addsField) {
		return imageHelper.getImage("action_add.png");
	}
	
	protected String text(FieldRemoval removesField) {
		return removesField.getName();
	}

	protected Image image(FieldRemoval removesField) {
		return imageHelper.getImage("action_remove.png");
	}	
}
