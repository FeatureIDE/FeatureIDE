/*
* generated by Xtext
*/
grammar InternalDeltaJ;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.deltaj.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.deltaj.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.deltaj.services.DeltaJGrammarAccess;

}

@parser::members {
 
 	private DeltaJGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(DeltaJGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProgram
entryRuleProgram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTypeVariable
entryRuleTypeVariable 
:
{ before(grammarAccess.getTypeVariableRule()); }
	 ruleTypeVariable
{ after(grammarAccess.getTypeVariableRule()); } 
	 EOF 
;

// Rule TypeVariable
ruleTypeVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeVariableAccess().getVarNameAssignment()); }
(rule__TypeVariable__VarNameAssignment)
{ after(grammarAccess.getTypeVariableAccess().getVarNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeVariableId
entryRuleTypeVariableId 
:
{ before(grammarAccess.getTypeVariableIdRule()); }
	 ruleTypeVariableId
{ after(grammarAccess.getTypeVariableIdRule()); } 
	 EOF 
;

// Rule TypeVariableId
ruleTypeVariableId
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeVariableIdAccess().getGroup()); }
(rule__TypeVariableId__Group__0)
{ after(grammarAccess.getTypeVariableIdAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeForMethod
entryRuleTypeForMethod 
:
{ before(grammarAccess.getTypeForMethodRule()); }
	 ruleTypeForMethod
{ after(grammarAccess.getTypeForMethodRule()); } 
	 EOF 
;

// Rule TypeForMethod
ruleTypeForMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeForMethodAccess().getAlternatives()); }
(rule__TypeForMethod__Alternatives)
{ after(grammarAccess.getTypeForMethodAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVoidType
entryRuleVoidType 
:
{ before(grammarAccess.getVoidTypeRule()); }
	 ruleVoidType
{ after(grammarAccess.getVoidTypeRule()); } 
	 EOF 
;

// Rule VoidType
ruleVoidType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVoidTypeAccess().getVoidAssignment()); }
(rule__VoidType__VoidAssignment)
{ after(grammarAccess.getVoidTypeAccess().getVoidAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeForDeclaration
entryRuleTypeForDeclaration 
:
{ before(grammarAccess.getTypeForDeclarationRule()); }
	 ruleTypeForDeclaration
{ after(grammarAccess.getTypeForDeclarationRule()); } 
	 EOF 
;

// Rule TypeForDeclaration
ruleTypeForDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeForDeclarationAccess().getAlternatives()); }
(rule__TypeForDeclaration__Alternatives)
{ after(grammarAccess.getTypeForDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBasicType
entryRuleBasicType 
:
{ before(grammarAccess.getBasicTypeRule()); }
	 ruleBasicType
{ after(grammarAccess.getBasicTypeRule()); } 
	 EOF 
;

// Rule BasicType
ruleBasicType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBasicTypeAccess().getAlternatives()); }
(rule__BasicType__Alternatives)
{ after(grammarAccess.getBasicTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntType
entryRuleIntType 
:
{ before(grammarAccess.getIntTypeRule()); }
	 ruleIntType
{ after(grammarAccess.getIntTypeRule()); } 
	 EOF 
;

// Rule IntType
ruleIntType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntTypeAccess().getBasicAssignment()); }
(rule__IntType__BasicAssignment)
{ after(grammarAccess.getIntTypeAccess().getBasicAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanType
entryRuleBooleanType 
:
{ before(grammarAccess.getBooleanTypeRule()); }
	 ruleBooleanType
{ after(grammarAccess.getBooleanTypeRule()); } 
	 EOF 
;

// Rule BooleanType
ruleBooleanType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanTypeAccess().getBasicAssignment()); }
(rule__BooleanType__BasicAssignment)
{ after(grammarAccess.getBooleanTypeAccess().getBasicAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringType
entryRuleStringType 
:
{ before(grammarAccess.getStringTypeRule()); }
	 ruleStringType
{ after(grammarAccess.getStringTypeRule()); } 
	 EOF 
;

// Rule StringType
ruleStringType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringTypeAccess().getBasicAssignment()); }
(rule__StringType__BasicAssignment)
{ after(grammarAccess.getStringTypeAccess().getBasicAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassType
entryRuleClassType 
:
{ before(grammarAccess.getClassTypeRule()); }
	 ruleClassType
{ after(grammarAccess.getClassTypeRule()); } 
	 EOF 
;

// Rule ClassType
ruleClassType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassTypeAccess().getClassrefAssignment()); }
(rule__ClassType__ClassrefAssignment)
{ after(grammarAccess.getClassTypeAccess().getClassrefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass
entryRuleClass 
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAccess().getGroup()); }
(rule__Class__Group__0)
{ after(grammarAccess.getClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassName
entryRuleClassName 
:
{ before(grammarAccess.getClassNameRule()); }
	 ruleClassName
{ after(grammarAccess.getClassNameRule()); } 
	 EOF 
;

// Rule ClassName
ruleClassName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassNameAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getClassNameAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldName
entryRuleFieldName 
:
{ before(grammarAccess.getFieldNameRule()); }
	 ruleFieldName
{ after(grammarAccess.getFieldNameRule()); } 
	 EOF 
;

// Rule FieldName
ruleFieldName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldNameAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getFieldNameAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodName
entryRuleMethodName 
:
{ before(grammarAccess.getMethodNameRule()); }
	 ruleMethodName
{ after(grammarAccess.getMethodNameRule()); } 
	 EOF 
;

// Rule MethodName
ruleMethodName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodNameAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getMethodNameAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleField
entryRuleField 
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldAccess().getGroup()); }
(rule__Field__Group__0)
{ after(grammarAccess.getFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalVariableDeclaration
entryRuleLocalVariableDeclaration 
:
{ before(grammarAccess.getLocalVariableDeclarationRule()); }
	 ruleLocalVariableDeclaration
{ after(grammarAccess.getLocalVariableDeclarationRule()); } 
	 EOF 
;

// Rule LocalVariableDeclaration
ruleLocalVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getGroup()); }
(rule__LocalVariableDeclaration__Group__0)
{ after(grammarAccess.getLocalVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethod
entryRuleMethod 
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodAccess().getGroup()); }
(rule__Method__Group__0)
{ after(grammarAccess.getMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatementBlock
entryRuleStatementBlock 
:
{ before(grammarAccess.getStatementBlockRule()); }
	 ruleStatementBlock
{ after(grammarAccess.getStatementBlockRule()); } 
	 EOF 
;

// Rule StatementBlock
ruleStatementBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementBlockAccess().getGroup()); }
(rule__StatementBlock__Group__0)
{ after(grammarAccess.getStatementBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnStatement
entryRuleReturnStatement 
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
(rule__ReturnStatement__Group__0)
{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionStatement
entryRuleExpressionStatement 
:
{ before(grammarAccess.getExpressionStatementRule()); }
	 ruleExpressionStatement
{ after(grammarAccess.getExpressionStatementRule()); } 
	 EOF 
;

// Rule ExpressionStatement
ruleExpressionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionStatementAccess().getGroup()); }
(rule__ExpressionStatement__Group__0)
{ after(grammarAccess.getExpressionStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getGroup()); }
(rule__Assignment__Group__0)
{ after(grammarAccess.getAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfStatement
entryRuleIfStatement 
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfStatementAccess().getGroup()); }
(rule__IfStatement__Group__0)
{ after(grammarAccess.getIfStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAdditionParserRuleCall()); }
	ruleAddition
{ after(grammarAccess.getExpressionAccess().getAdditionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddition
entryRuleAddition 
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditionAccess().getGroup()); }
(rule__Addition__Group__0)
{ after(grammarAccess.getAdditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplication
entryRuleMultiplication 
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
(rule__Multiplication__Group__0)
{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComparison
entryRuleComparison 
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComparisonAccess().getGroup()); }
(rule__Comparison__Group__0)
{ after(grammarAccess.getComparisonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression 
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanExpressionAccess().getGroup()); }
(rule__BooleanExpression__Group__0)
{ after(grammarAccess.getBooleanExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomic
entryRuleAtomic 
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
(rule__Atomic__Alternatives)
{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression 
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
(rule__TerminalExpression__Alternatives)
{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNull
entryRuleNull 
:
{ before(grammarAccess.getNullRule()); }
	 ruleNull
{ after(grammarAccess.getNullRule()); } 
	 EOF 
;

// Rule Null
ruleNull
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullAccess().getNullAssignment()); }
(rule__Null__NullAssignment)
{ after(grammarAccess.getNullAccess().getNullAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThis
entryRuleThis 
:
{ before(grammarAccess.getThisRule()); }
	 ruleThis
{ after(grammarAccess.getThisRule()); } 
	 EOF 
;

// Rule This
ruleThis
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThisAccess().getVariableAssignment()); }
(rule__This__VariableAssignment)
{ after(grammarAccess.getThisAccess().getVariableAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOriginal
entryRuleOriginal 
:
{ before(grammarAccess.getOriginalRule()); }
	 ruleOriginal
{ after(grammarAccess.getOriginalRule()); } 
	 EOF 
;

// Rule Original
ruleOriginal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOriginalAccess().getGroup()); }
(rule__Original__Group__0)
{ after(grammarAccess.getOriginalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableAccess
entryRuleVariableAccess 
:
{ before(grammarAccess.getVariableAccessRule()); }
	 ruleVariableAccess
{ after(grammarAccess.getVariableAccessRule()); } 
	 EOF 
;

// Rule VariableAccess
ruleVariableAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccessAccess().getVariableAssignment()); }
(rule__VariableAccess__VariableAssignment)
{ after(grammarAccess.getVariableAccessAccess().getVariableAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNew
entryRuleNew 
:
{ before(grammarAccess.getNewRule()); }
	 ruleNew
{ after(grammarAccess.getNewRule()); } 
	 EOF 
;

// Rule New
ruleNew
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNewAccess().getGroup()); }
(rule__New__Group__0)
{ after(grammarAccess.getNewAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCast
entryRuleCast 
:
{ before(grammarAccess.getCastRule()); }
	 ruleCast
{ after(grammarAccess.getCastRule()); } 
	 EOF 
;

// Rule Cast
ruleCast
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCastAccess().getGroup()); }
(rule__Cast__Group__0)
{ after(grammarAccess.getCastAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParen
entryRuleParen 
:
{ before(grammarAccess.getParenRule()); }
	 ruleParen
{ after(grammarAccess.getParenRule()); } 
	 EOF 
;

// Rule Paren
ruleParen
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenAccess().getGroup()); }
(rule__Paren__Group__0)
{ after(grammarAccess.getParenAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstant
entryRuleConstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAccess().getAlternatives()); }
(rule__Constant__Alternatives)
{ after(grammarAccess.getConstantAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringConstant
entryRuleStringConstant 
:
{ before(grammarAccess.getStringConstantRule()); }
	 ruleStringConstant
{ after(grammarAccess.getStringConstantRule()); } 
	 EOF 
;

// Rule StringConstant
ruleStringConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringConstantAccess().getConstantAssignment()); }
(rule__StringConstant__ConstantAssignment)
{ after(grammarAccess.getStringConstantAccess().getConstantAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntConstant
entryRuleIntConstant 
:
{ before(grammarAccess.getIntConstantRule()); }
	 ruleIntConstant
{ after(grammarAccess.getIntConstantRule()); } 
	 EOF 
;

// Rule IntConstant
ruleIntConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntConstantAccess().getConstantAssignment()); }
(rule__IntConstant__ConstantAssignment)
{ after(grammarAccess.getIntConstantAccess().getConstantAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolConstant
entryRuleBoolConstant 
:
{ before(grammarAccess.getBoolConstantRule()); }
	 ruleBoolConstant
{ after(grammarAccess.getBoolConstantRule()); } 
	 EOF 
;

// Rule BoolConstant
ruleBoolConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoolConstantAccess().getConstantAssignment()); }
(rule__BoolConstant__ConstantAssignment)
{ after(grammarAccess.getBoolConstantAccess().getConstantAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessage
entryRuleMessage 
:
{ before(grammarAccess.getMessageRule()); }
	 ruleMessage
{ after(grammarAccess.getMessageRule()); } 
	 EOF 
;

// Rule Message
ruleMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageAccess().getAlternatives()); }
(rule__Message__Alternatives)
{ after(grammarAccess.getMessageAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodCall
entryRuleMethodCall 
:
{ before(grammarAccess.getMethodCallRule()); }
	 ruleMethodCall
{ after(grammarAccess.getMethodCallRule()); } 
	 EOF 
;

// Rule MethodCall
ruleMethodCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodCallAccess().getGroup()); }
(rule__MethodCall__Group__0)
{ after(grammarAccess.getMethodCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldSelection
entryRuleFieldSelection 
:
{ before(grammarAccess.getFieldSelectionRule()); }
	 ruleFieldSelection
{ after(grammarAccess.getFieldSelectionRule()); } 
	 EOF 
;

// Rule FieldSelection
ruleFieldSelection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldSelectionAccess().getFieldAssignment()); }
(rule__FieldSelection__FieldAssignment)
{ after(grammarAccess.getFieldSelectionAccess().getFieldAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeltaModule
entryRuleDeltaModule 
:
{ before(grammarAccess.getDeltaModuleRule()); }
	 ruleDeltaModule
{ after(grammarAccess.getDeltaModuleRule()); } 
	 EOF 
;

// Rule DeltaModule
ruleDeltaModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeltaModuleAccess().getGroup()); }
(rule__DeltaModule__Group__0)
{ after(grammarAccess.getDeltaModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeltaAction
entryRuleDeltaAction 
:
{ before(grammarAccess.getDeltaActionRule()); }
	 ruleDeltaAction
{ after(grammarAccess.getDeltaActionRule()); } 
	 EOF 
;

// Rule DeltaAction
ruleDeltaAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeltaActionAccess().getAlternatives()); }
(rule__DeltaAction__Alternatives)
{ after(grammarAccess.getDeltaActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassAddition
entryRuleClassAddition 
:
{ before(grammarAccess.getClassAdditionRule()); }
	 ruleClassAddition
{ after(grammarAccess.getClassAdditionRule()); } 
	 EOF 
;

// Rule ClassAddition
ruleClassAddition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAdditionAccess().getGroup()); }
(rule__ClassAddition__Group__0)
{ after(grammarAccess.getClassAdditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRemovesOrModifiesClass
entryRuleRemovesOrModifiesClass 
:
{ before(grammarAccess.getRemovesOrModifiesClassRule()); }
	 ruleRemovesOrModifiesClass
{ after(grammarAccess.getRemovesOrModifiesClassRule()); } 
	 EOF 
;

// Rule RemovesOrModifiesClass
ruleRemovesOrModifiesClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRemovesOrModifiesClassAccess().getAlternatives()); }
(rule__RemovesOrModifiesClass__Alternatives)
{ after(grammarAccess.getRemovesOrModifiesClassAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassRemoval
entryRuleClassRemoval 
:
{ before(grammarAccess.getClassRemovalRule()); }
	 ruleClassRemoval
{ after(grammarAccess.getClassRemovalRule()); } 
	 EOF 
;

// Rule ClassRemoval
ruleClassRemoval
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassRemovalAccess().getGroup()); }
(rule__ClassRemoval__Group__0)
{ after(grammarAccess.getClassRemovalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassModification
entryRuleClassModification 
:
{ before(grammarAccess.getClassModificationRule()); }
	 ruleClassModification
{ after(grammarAccess.getClassModificationRule()); } 
	 EOF 
;

// Rule ClassModification
ruleClassModification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassModificationAccess().getGroup()); }
(rule__ClassModification__Group__0)
{ after(grammarAccess.getClassModificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeltaSubAction
entryRuleDeltaSubAction 
:
{ before(grammarAccess.getDeltaSubActionRule()); }
	 ruleDeltaSubAction
{ after(grammarAccess.getDeltaSubActionRule()); } 
	 EOF 
;

// Rule DeltaSubAction
ruleDeltaSubAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeltaSubActionAccess().getAlternatives()); }
(rule__DeltaSubAction__Alternatives)
{ after(grammarAccess.getDeltaSubActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodOrFieldAddition
entryRuleMethodOrFieldAddition 
:
{ before(grammarAccess.getMethodOrFieldAdditionRule()); }
	 ruleMethodOrFieldAddition
{ after(grammarAccess.getMethodOrFieldAdditionRule()); } 
	 EOF 
;

// Rule MethodOrFieldAddition
ruleMethodOrFieldAddition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodOrFieldAdditionAccess().getAlternatives()); }
(rule__MethodOrFieldAddition__Alternatives)
{ after(grammarAccess.getMethodOrFieldAdditionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldAddition
entryRuleFieldAddition 
:
{ before(grammarAccess.getFieldAdditionRule()); }
	 ruleFieldAddition
{ after(grammarAccess.getFieldAdditionRule()); } 
	 EOF 
;

// Rule FieldAddition
ruleFieldAddition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldAdditionAccess().getGroup()); }
(rule__FieldAddition__Group__0)
{ after(grammarAccess.getFieldAdditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodAddition
entryRuleMethodAddition 
:
{ before(grammarAccess.getMethodAdditionRule()); }
	 ruleMethodAddition
{ after(grammarAccess.getMethodAdditionRule()); } 
	 EOF 
;

// Rule MethodAddition
ruleMethodAddition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodAdditionAccess().getGroup()); }
(rule__MethodAddition__Group__0)
{ after(grammarAccess.getMethodAdditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldRemoval
entryRuleFieldRemoval 
:
{ before(grammarAccess.getFieldRemovalRule()); }
	 ruleFieldRemoval
{ after(grammarAccess.getFieldRemovalRule()); } 
	 EOF 
;

// Rule FieldRemoval
ruleFieldRemoval
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldRemovalAccess().getGroup()); }
(rule__FieldRemoval__Group__0)
{ after(grammarAccess.getFieldRemovalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodRemoval
entryRuleMethodRemoval 
:
{ before(grammarAccess.getMethodRemovalRule()); }
	 ruleMethodRemoval
{ after(grammarAccess.getMethodRemovalRule()); } 
	 EOF 
;

// Rule MethodRemoval
ruleMethodRemoval
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodRemovalAccess().getGroup()); }
(rule__MethodRemoval__Group__0)
{ after(grammarAccess.getMethodRemovalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodModification
entryRuleMethodModification 
:
{ before(grammarAccess.getMethodModificationRule()); }
	 ruleMethodModification
{ after(grammarAccess.getMethodModificationRule()); } 
	 EOF 
;

// Rule MethodModification
ruleMethodModification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodModificationAccess().getGroup()); }
(rule__MethodModification__Group__0)
{ after(grammarAccess.getMethodModificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProductLine
entryRuleProductLine 
:
{ before(grammarAccess.getProductLineRule()); }
	 ruleProductLine
{ after(grammarAccess.getProductLineRule()); } 
	 EOF 
;

// Rule ProductLine
ruleProductLine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProductLineAccess().getGroup()); }
(rule__ProductLine__Group__0)
{ after(grammarAccess.getProductLineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatures
entryRuleFeatures 
:
{ before(grammarAccess.getFeaturesRule()); }
	 ruleFeatures
{ after(grammarAccess.getFeaturesRule()); } 
	 EOF 
;

// Rule Features
ruleFeatures
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeaturesAccess().getGroup()); }
(rule__Features__Group__0)
{ after(grammarAccess.getFeaturesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeature
entryRuleFeature 
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureAccess().getNameAssignment()); }
(rule__Feature__NameAssignment)
{ after(grammarAccess.getFeatureAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConfigurations
entryRuleConfigurations 
:
{ before(grammarAccess.getConfigurationsRule()); }
	 ruleConfigurations
{ after(grammarAccess.getConfigurationsRule()); } 
	 EOF 
;

// Rule Configurations
ruleConfigurations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConfigurationsAccess().getGroup()); }
(rule__Configurations__Group__0)
{ after(grammarAccess.getConfigurationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConfiguration
entryRuleConfiguration 
:
{ before(grammarAccess.getConfigurationRule()); }
	 ruleConfiguration
{ after(grammarAccess.getConfigurationRule()); } 
	 EOF 
;

// Rule Configuration
ruleConfiguration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConfigurationAccess().getFormulaAssignment()); }
(rule__Configuration__FormulaAssignment)
{ after(grammarAccess.getConfigurationAccess().getFormulaAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeltaPartition
entryRuleDeltaPartition 
:
{ before(grammarAccess.getDeltaPartitionRule()); }
	 ruleDeltaPartition
{ after(grammarAccess.getDeltaPartitionRule()); } 
	 EOF 
;

// Rule DeltaPartition
ruleDeltaPartition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeltaPartitionAccess().getGroup()); }
(rule__DeltaPartition__Group__0)
{ after(grammarAccess.getDeltaPartitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePartitionPart
entryRulePartitionPart 
:
{ before(grammarAccess.getPartitionPartRule()); }
	 rulePartitionPart
{ after(grammarAccess.getPartitionPartRule()); } 
	 EOF 
;

// Rule PartitionPart
rulePartitionPart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPartitionPartAccess().getGroup()); }
(rule__PartitionPart__Group__0)
{ after(grammarAccess.getPartitionPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModuleReference
entryRuleModuleReference 
:
{ before(grammarAccess.getModuleReferenceRule()); }
	 ruleModuleReference
{ after(grammarAccess.getModuleReferenceRule()); } 
	 EOF 
;

// Rule ModuleReference
ruleModuleReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleReferenceAccess().getGroup()); }
(rule__ModuleReference__Group__0)
{ after(grammarAccess.getModuleReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropositionalFormula
entryRulePropositionalFormula 
:
{ before(grammarAccess.getPropositionalFormulaRule()); }
	 rulePropositionalFormula
{ after(grammarAccess.getPropositionalFormulaRule()); } 
	 EOF 
;

// Rule PropositionalFormula
rulePropositionalFormula
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropositionalFormulaAccess().getGroup()); }
(rule__PropositionalFormula__Group__0)
{ after(grammarAccess.getPropositionalFormulaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnd
entryRuleAnd 
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndAccess().getGroup()); }
(rule__And__Group__0)
{ after(grammarAccess.getAndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimary
entryRulePrimary 
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
(rule__Primary__Alternatives)
{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProduct
entryRuleProduct 
:
{ before(grammarAccess.getProductRule()); }
	 ruleProduct
{ after(grammarAccess.getProductRule()); } 
	 EOF 
;

// Rule Product
ruleProduct
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProductAccess().getGroup()); }
(rule__Product__Group__0)
{ after(grammarAccess.getProductAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__TypeForMethod__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeForMethodAccess().getVoidTypeParserRuleCall_0()); }
	ruleVoidType
{ after(grammarAccess.getTypeForMethodAccess().getVoidTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeForMethodAccess().getTypeForDeclarationParserRuleCall_1()); }
	ruleTypeForDeclaration
{ after(grammarAccess.getTypeForMethodAccess().getTypeForDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeForDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeForDeclarationAccess().getBasicTypeParserRuleCall_0()); }
	ruleBasicType
{ after(grammarAccess.getTypeForDeclarationAccess().getBasicTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeForDeclarationAccess().getClassTypeParserRuleCall_1()); }
	ruleClassType
{ after(grammarAccess.getTypeForDeclarationAccess().getClassTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicTypeAccess().getIntTypeParserRuleCall_0()); }
	ruleIntType
{ after(grammarAccess.getBasicTypeAccess().getIntTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBasicTypeAccess().getBooleanTypeParserRuleCall_1()); }
	ruleBooleanType
{ after(grammarAccess.getBasicTypeAccess().getBooleanTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBasicTypeAccess().getStringTypeParserRuleCall_2()); }
	ruleStringType
{ after(grammarAccess.getBasicTypeAccess().getStringTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExpressionStatementParserRuleCall_0()); }
	ruleExpressionStatement
{ after(grammarAccess.getStatementAccess().getExpressionStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getAssignmentParserRuleCall_1()); }
	ruleAssignment
{ after(grammarAccess.getStatementAccess().getAssignmentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_2()); }
	ruleIfStatement
{ after(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_3()); }
(rule__Statement__Group_3__0)
{ after(grammarAccess.getStatementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1_0_0()); }
(rule__Addition__Group_1_0_0__0)
{ after(grammarAccess.getAdditionAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getAdditionAccess().getGroup_1_0_1()); }
(rule__Addition__Group_1_0_1__0)
{ after(grammarAccess.getAdditionAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_1_1_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_1_1_0_1()); }

	'/' 

{ after(grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }

	'>=' 

{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }

	'<=' 

{ after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_2()); }

	'<' 

{ after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_3()); }

	'>' 

{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_3()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_4()); }

	'==' 

{ after(grammarAccess.getComparisonAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_4()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_5()); }

	'!=' 

{ after(grammarAccess.getComparisonAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_1_0_0()); }

	'||' 

{ after(grammarAccess.getBooleanExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getBooleanExpressionAccess().getOpAmpersandAmpersandKeyword_1_1_0_1()); }

	'&&' 

{ after(grammarAccess.getBooleanExpressionAccess().getOpAmpersandAmpersandKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
(rule__Atomic__Group_0__0)
{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
(rule__Atomic__Group_1__0)
{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_2()); }
(rule__Atomic__Group_2__0)
{ after(grammarAccess.getAtomicAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getThisParserRuleCall_0()); }
	ruleThis
{ after(grammarAccess.getTerminalExpressionAccess().getThisParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getNullParserRuleCall_1()); }
	ruleNull
{ after(grammarAccess.getTerminalExpressionAccess().getNullParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getOriginalParserRuleCall_2()); }
	ruleOriginal
{ after(grammarAccess.getTerminalExpressionAccess().getOriginalParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getNewParserRuleCall_3()); }
	ruleNew
{ after(grammarAccess.getTerminalExpressionAccess().getNewParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getCastParserRuleCall_4()); }
	ruleCast
{ after(grammarAccess.getTerminalExpressionAccess().getCastParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getConstantParserRuleCall_5()); }
	ruleConstant
{ after(grammarAccess.getTerminalExpressionAccess().getConstantParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getVariableAccessParserRuleCall_6()); }
	ruleVariableAccess
{ after(grammarAccess.getTerminalExpressionAccess().getVariableAccessParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getParenParserRuleCall_7()); }
	ruleParen
{ after(grammarAccess.getTerminalExpressionAccess().getParenParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getIntConstantParserRuleCall_0()); }
	ruleIntConstant
{ after(grammarAccess.getConstantAccess().getIntConstantParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getBoolConstantParserRuleCall_1()); }
	ruleBoolConstant
{ after(grammarAccess.getConstantAccess().getBoolConstantParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getStringConstantParserRuleCall_2()); }
	ruleStringConstant
{ after(grammarAccess.getConstantAccess().getStringConstantParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoolConstant__ConstantAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolConstantAccess().getConstantTrueKeyword_0_0()); }

	'true' 

{ after(grammarAccess.getBoolConstantAccess().getConstantTrueKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getBoolConstantAccess().getConstantFalseKeyword_0_1()); }

	'false' 

{ after(grammarAccess.getBoolConstantAccess().getConstantFalseKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getFieldSelectionParserRuleCall_0()); }
	ruleFieldSelection
{ after(grammarAccess.getMessageAccess().getFieldSelectionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMessageAccess().getMethodCallParserRuleCall_1()); }
	ruleMethodCall
{ after(grammarAccess.getMessageAccess().getMethodCallParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaAction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeltaActionAccess().getClassAdditionParserRuleCall_0()); }
	ruleClassAddition
{ after(grammarAccess.getDeltaActionAccess().getClassAdditionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeltaActionAccess().getRemovesOrModifiesClassParserRuleCall_1()); }
	ruleRemovesOrModifiesClass
{ after(grammarAccess.getDeltaActionAccess().getRemovesOrModifiesClassParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RemovesOrModifiesClass__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemovesOrModifiesClassAccess().getClassRemovalParserRuleCall_0()); }
	ruleClassRemoval
{ after(grammarAccess.getRemovesOrModifiesClassAccess().getClassRemovalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRemovesOrModifiesClassAccess().getClassModificationParserRuleCall_1()); }
	ruleClassModification
{ after(grammarAccess.getRemovesOrModifiesClassAccess().getClassModificationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaSubAction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeltaSubActionAccess().getMethodOrFieldAdditionParserRuleCall_0()); }
	ruleMethodOrFieldAddition
{ after(grammarAccess.getDeltaSubActionAccess().getMethodOrFieldAdditionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeltaSubActionAccess().getFieldRemovalParserRuleCall_1()); }
	ruleFieldRemoval
{ after(grammarAccess.getDeltaSubActionAccess().getFieldRemovalParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDeltaSubActionAccess().getMethodRemovalParserRuleCall_2()); }
	ruleMethodRemoval
{ after(grammarAccess.getDeltaSubActionAccess().getMethodRemovalParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDeltaSubActionAccess().getMethodModificationParserRuleCall_3()); }
	ruleMethodModification
{ after(grammarAccess.getDeltaSubActionAccess().getMethodModificationParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodOrFieldAddition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodOrFieldAdditionAccess().getFieldAdditionParserRuleCall_0()); }
	ruleFieldAddition
{ after(grammarAccess.getMethodOrFieldAdditionAccess().getFieldAdditionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMethodOrFieldAdditionAccess().getMethodAdditionParserRuleCall_1()); }
	ruleMethodAddition
{ after(grammarAccess.getMethodOrFieldAdditionAccess().getMethodAdditionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
(rule__Primary__Group_0__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
(rule__Primary__Group_1__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getGroup_2()); }
(rule__Primary__Group_2__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getGroup_3()); }
(rule__Primary__Group_3__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getGroup_4()); }
(rule__Primary__Group_4__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getDeltaModulesAssignment_0()); }
(rule__Program__DeltaModulesAssignment_0)*
{ after(grammarAccess.getProgramAccess().getDeltaModulesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getProductLinesAssignment_1()); }
(rule__Program__ProductLinesAssignment_1)*
{ after(grammarAccess.getProgramAccess().getProductLinesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getProductsAssignment_2()); }
(rule__Program__ProductsAssignment_2)*
{ after(grammarAccess.getProgramAccess().getProductsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeVariableId__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeVariableId__Group__0__Impl
	rule__TypeVariableId__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeVariableId__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeVariableIdAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getTypeVariableIdAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeVariableId__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeVariableId__Group__1__Impl
	rule__TypeVariableId__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeVariableId__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeVariableIdAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getTypeVariableIdAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeVariableId__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeVariableId__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeVariableId__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeVariableIdAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getTypeVariableIdAccess().getGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Class__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getClassKeyword_0()); }

	'class' 

{ after(grammarAccess.getClassAccess().getClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameAssignment_1()); }
(rule__Class__NameAssignment_1)
{ after(grammarAccess.getClassAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__2__Impl
	rule__Class__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_2()); }
(rule__Class__Group_2__0)?
{ after(grammarAccess.getClassAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__3__Impl
	rule__Class__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__4__Impl
	rule__Class__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getFieldsAssignment_4()); }
(rule__Class__FieldsAssignment_4)*
{ after(grammarAccess.getClassAccess().getFieldsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__5__Impl
	rule__Class__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getMethodsAssignment_5()); }
(rule__Class__MethodsAssignment_5)*
{ after(grammarAccess.getClassAccess().getMethodsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Class__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_2__0__Impl
	rule__Class__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getClassAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getExtendsAssignment_2_1()); }
(rule__Class__ExtendsAssignment_2_1)
{ after(grammarAccess.getClassAccess().getExtendsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Field__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTypeAssignment_0()); }
(rule__Field__TypeAssignment_0)
{ after(grammarAccess.getFieldAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameAssignment_1()); }
(rule__Field__NameAssignment_1)
{ after(grammarAccess.getFieldAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getFieldAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LocalVariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariableDeclaration__Group__0__Impl
	rule__LocalVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getTypeAssignment_0()); }
(rule__LocalVariableDeclaration__TypeAssignment_0)
{ after(grammarAccess.getLocalVariableDeclarationAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariableDeclaration__Group__1__Impl
	rule__LocalVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getNameAssignment_1()); }
(rule__LocalVariableDeclaration__NameAssignment_1)
{ after(grammarAccess.getLocalVariableDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariableDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getLocalVariableDeclarationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
(rule__Parameter__TypeAssignment_0)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
(rule__Parameter__NameAssignment_1)
{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getReturntypeAssignment_0()); }
(rule__Method__ReturntypeAssignment_0)
{ after(grammarAccess.getMethodAccess().getReturntypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameAssignment_1()); }
(rule__Method__NameAssignment_1)
{ after(grammarAccess.getMethodAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_3()); }
(rule__Method__Group_3__0)?
{ after(grammarAccess.getMethodAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__4__Impl
	rule__Method__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getMethodAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getBodyAssignment_5()); }
(rule__Method__BodyAssignment_5)?
{ after(grammarAccess.getMethodAccess().getBodyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Method__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3__0__Impl
	rule__Method__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsAssignment_3_0()); }
(rule__Method__ParamsAssignment_3_0)
{ after(grammarAccess.getMethodAccess().getParamsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_3_1()); }
(rule__Method__Group_3_1__0)*
{ after(grammarAccess.getMethodAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3_1__0__Impl
	rule__Method__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getMethodAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsAssignment_3_1_1()); }
(rule__Method__ParamsAssignment_3_1_1)
{ after(grammarAccess.getMethodAccess().getParamsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatementBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__0__Impl
	rule__StatementBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getStatementBlockAction_0()); }
(

)
{ after(grammarAccess.getStatementBlockAccess().getStatementBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__1__Impl
	rule__StatementBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getStatementBlockAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__2__Impl
	rule__StatementBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getLocalvariablesAssignment_2()); }
(rule__StatementBlock__LocalvariablesAssignment_2)*
{ after(grammarAccess.getStatementBlockAccess().getLocalvariablesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__3__Impl
	rule__StatementBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getStatementsAssignment_3()); }
(rule__StatementBlock__StatementsAssignment_3)*
{ after(grammarAccess.getStatementBlockAccess().getStatementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__4__Impl
	rule__StatementBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getStatementsAssignment_4()); }
(rule__StatementBlock__StatementsAssignment_4)?
{ after(grammarAccess.getStatementBlockAccess().getStatementsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBlock__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getStatementBlockAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ReturnStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getReturnStatementAction_0()); }
(

)
{ after(grammarAccess.getReturnStatementAccess().getReturnStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__1__Impl
	rule__ReturnStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getReturnKeyword_1()); }

	'return' 

{ after(grammarAccess.getReturnStatementAccess().getReturnKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__2__Impl
	rule__ReturnStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getExpressionAssignment_2()); }
(rule__ReturnStatement__ExpressionAssignment_2)?
{ after(grammarAccess.getReturnStatementAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_3__0__Impl
	rule__Statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getJavaVerbatimAction_3_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getJavaVerbatimAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVerbatimAssignment_3_1()); }
(rule__Statement__VerbatimAssignment_3_1)
{ after(grammarAccess.getStatementAccess().getVerbatimAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionStatement__Group__0__Impl
	rule__ExpressionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionStatementAccess().getExpressionAssignment_0()); }
(rule__ExpressionStatement__ExpressionAssignment_0)
{ after(grammarAccess.getExpressionStatementAccess().getExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getExpressionStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLeftAssignment_0()); }
(rule__Assignment__LeftAssignment_0)
{ after(grammarAccess.getAssignmentAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__2__Impl
	rule__Assignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightAssignment_2()); }
(rule__Assignment__RightAssignment_2)
{ after(grammarAccess.getAssignmentAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getAssignmentAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IfStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfStatementAction_0()); }
(

)
{ after(grammarAccess.getIfStatementAccess().getIfStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfKeyword_1()); }

	'if' 

{ after(grammarAccess.getIfStatementAccess().getIfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getExpressionAssignment_3()); }
(rule__IfStatement__ExpressionAssignment_3)
{ after(grammarAccess.getIfStatementAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__5__Impl
	rule__IfStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getThenBlockAssignment_5()); }
(rule__IfStatement__ThenBlockAssignment_5)
{ after(grammarAccess.getIfStatementAccess().getThenBlockAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getGroup_6()); }
(rule__IfStatement__Group_6__0)?
{ after(grammarAccess.getIfStatementAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__IfStatement__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_6__0__Impl
	rule__IfStatement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseKeyword_6_0()); }

	'else' 

{ after(grammarAccess.getIfStatementAccess().getElseKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseBlockAssignment_6_1()); }
(rule__IfStatement__ElseBlockAssignment_6_1)
{ after(grammarAccess.getIfStatementAccess().getElseBlockAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
	ruleMultiplication
{ after(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
(rule__Addition__Group_1__0)*
{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getAlternatives_1_0()); }
(rule__Addition__Alternatives_1_0)
{ after(grammarAccess.getAdditionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
(rule__Addition__RightAssignment_1_1)
{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_0__0__Impl
	rule__Addition__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1()); }

	'+' 

{ after(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Addition__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_1__0__Impl
	rule__Addition__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Addition__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1()); }

	'-' 

{ after(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
{ after(grammarAccess.getMultiplicationAccess().getComparisonParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
(rule__Multiplication__Group_1__0)*
{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplication__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getMultiOrDivLeftAction_1_0()); }
(

)
{ after(grammarAccess.getMultiplicationAccess().getMultiOrDivLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__1__Impl
	rule__Multiplication__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getOpAssignment_1_1()); }
(rule__Multiplication__OpAssignment_1_1)
{ after(grammarAccess.getMultiplicationAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplication__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_2()); }
(rule__Multiplication__RightAssignment_1_2)
{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Comparison__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getBooleanExpressionParserRuleCall_0()); }
	ruleBooleanExpression
{ after(grammarAccess.getComparisonAccess().getBooleanExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
(rule__Comparison__Group_1__0)*
{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); }
(

)
{ after(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1__1__Impl
	rule__Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
(rule__Comparison__OpAssignment_1_1)
{ after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
(rule__Comparison__RightAssignment_1_2)
{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BooleanExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group__0__Impl
	rule__BooleanExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getAtomicParserRuleCall_0()); }
	ruleAtomic
{ after(grammarAccess.getBooleanExpressionAccess().getAtomicParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getGroup_1()); }
(rule__BooleanExpression__Group_1__0)*
{ after(grammarAccess.getBooleanExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group_1__0__Impl
	rule__BooleanExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getAndOrExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getBooleanExpressionAccess().getAndOrExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group_1__1__Impl
	rule__BooleanExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getOpAssignment_1_1()); }
(rule__BooleanExpression__OpAssignment_1_1)
{ after(grammarAccess.getBooleanExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getRightAssignment_1_2()); }
(rule__BooleanExpression__RightAssignment_1_2)
{ after(grammarAccess.getBooleanExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Atomic__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getBooleanNegationAction_0_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getBooleanNegationAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__1__Impl
	rule__Atomic__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getExclamationMarkKeyword_0_1()); }

	'!' 

{ after(grammarAccess.getAtomicAccess().getExclamationMarkKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getExpressionAssignment_0_2()); }
(rule__Atomic__ExpressionAssignment_0_2)
{ after(grammarAccess.getAtomicAccess().getExpressionAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Atomic__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getArithmeticSignedAction_1_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getArithmeticSignedAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_1__1__Impl
	rule__Atomic__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getHyphenMinusKeyword_1_1()); }

	'-' 

{ after(grammarAccess.getAtomicAccess().getHyphenMinusKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getExpressionAssignment_1_2()); }
(rule__Atomic__ExpressionAssignment_1_2)
{ after(grammarAccess.getAtomicAccess().getExpressionAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Atomic__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_2__0__Impl
	rule__Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getTerminalExpressionParserRuleCall_2_0()); }
	ruleTerminalExpression
{ after(grammarAccess.getAtomicAccess().getTerminalExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getGroup_2_1()); }
(rule__Atomic__Group_2_1__0)*
{ after(grammarAccess.getAtomicAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_2_1__0__Impl
	rule__Atomic__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getSelectionReceiverAction_2_1_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getSelectionReceiverAction_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_2_1__1__Impl
	rule__Atomic__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getFullStopKeyword_2_1_1()); }

	'.' 

{ after(grammarAccess.getAtomicAccess().getFullStopKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getMessageAssignment_2_1_2()); }
(rule__Atomic__MessageAssignment_2_1_2)
{ after(grammarAccess.getAtomicAccess().getMessageAssignment_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Original__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Original__Group__0__Impl
	rule__Original__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Original__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOriginalAccess().getMethodAssignment_0()); }
(rule__Original__MethodAssignment_0)
{ after(grammarAccess.getOriginalAccess().getMethodAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Original__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Original__Group__1__Impl
	rule__Original__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Original__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOriginalAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getOriginalAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Original__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Original__Group__2__Impl
	rule__Original__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Original__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOriginalAccess().getGroup_2()); }
(rule__Original__Group_2__0)?
{ after(grammarAccess.getOriginalAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Original__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Original__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Original__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOriginalAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getOriginalAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Original__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Original__Group_2__0__Impl
	rule__Original__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Original__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOriginalAccess().getArgsAssignment_2_0()); }
(rule__Original__ArgsAssignment_2_0)
{ after(grammarAccess.getOriginalAccess().getArgsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Original__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Original__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Original__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOriginalAccess().getGroup_2_1()); }
(rule__Original__Group_2_1__0)*
{ after(grammarAccess.getOriginalAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Original__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Original__Group_2_1__0__Impl
	rule__Original__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Original__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOriginalAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getOriginalAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Original__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Original__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Original__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOriginalAccess().getArgsAssignment_2_1_1()); }
(rule__Original__ArgsAssignment_2_1_1)
{ after(grammarAccess.getOriginalAccess().getArgsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__New__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group__0__Impl
	rule__New__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getNewAccess().getNewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__New__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group__1__Impl
	rule__New__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getClassAssignment_1()); }
(rule__New__ClassAssignment_1)
{ after(grammarAccess.getNewAccess().getClassAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__New__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group__2__Impl
	rule__New__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getNewAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__New__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getNewAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Cast__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__0__Impl
	rule__Cast__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getCastAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__1__Impl
	rule__Cast__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getTypeAssignment_1()); }
(rule__Cast__TypeAssignment_1)
{ after(grammarAccess.getCastAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__2__Impl
	rule__Cast__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getCastAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getObjectAssignment_3()); }
(rule__Cast__ObjectAssignment_3)
{ after(grammarAccess.getCastAccess().getObjectAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Paren__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Paren__Group__0__Impl
	rule__Paren__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Paren__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParenAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Paren__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Paren__Group__1__Impl
	rule__Paren__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Paren__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenAccess().getExpressionAssignment_1()); }
(rule__Paren__ExpressionAssignment_1)
{ after(grammarAccess.getParenAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Paren__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Paren__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Paren__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getParenAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MethodCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group__0__Impl
	rule__MethodCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getMethodAssignment_0()); }
(rule__MethodCall__MethodAssignment_0)
{ after(grammarAccess.getMethodCallAccess().getMethodAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group__1__Impl
	rule__MethodCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getMethodCallAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group__2__Impl
	rule__MethodCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getGroup_2()); }
(rule__MethodCall__Group_2__0)?
{ after(grammarAccess.getMethodCallAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodCall__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_2__0__Impl
	rule__MethodCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getArgsAssignment_2_0()); }
(rule__MethodCall__ArgsAssignment_2_0)
{ after(grammarAccess.getMethodCallAccess().getArgsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getGroup_2_1()); }
(rule__MethodCall__Group_2_1__0)*
{ after(grammarAccess.getMethodCallAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodCall__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_2_1__0__Impl
	rule__MethodCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getMethodCallAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getArgsAssignment_2_1_1()); }
(rule__MethodCall__ArgsAssignment_2_1_1)
{ after(grammarAccess.getMethodCallAccess().getArgsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeltaModule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeltaModule__Group__0__Impl
	rule__DeltaModule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaModule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeltaModuleAccess().getDeltaKeyword_0()); }

	'delta' 

{ after(grammarAccess.getDeltaModuleAccess().getDeltaKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeltaModule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeltaModule__Group__1__Impl
	rule__DeltaModule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaModule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeltaModuleAccess().getNameAssignment_1()); }
(rule__DeltaModule__NameAssignment_1)
{ after(grammarAccess.getDeltaModuleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeltaModule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeltaModule__Group__2__Impl
	rule__DeltaModule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaModule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeltaModuleAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getDeltaModuleAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeltaModule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeltaModule__Group__3__Impl
	rule__DeltaModule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaModule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeltaModuleAccess().getDeltaActionsAssignment_3()); }
(rule__DeltaModule__DeltaActionsAssignment_3)*
{ after(grammarAccess.getDeltaModuleAccess().getDeltaActionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeltaModule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeltaModule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaModule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeltaModuleAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getDeltaModuleAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ClassAddition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassAddition__Group__0__Impl
	rule__ClassAddition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAddition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAdditionAccess().getAddsKeyword_0()); }

	'adds' 

{ after(grammarAccess.getClassAdditionAccess().getAddsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassAddition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassAddition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAddition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAdditionAccess().getClassAssignment_1()); }
(rule__ClassAddition__ClassAssignment_1)
{ after(grammarAccess.getClassAdditionAccess().getClassAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassRemoval__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassRemoval__Group__0__Impl
	rule__ClassRemoval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassRemoval__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassRemovalAccess().getRemovesKeyword_0()); }

	'removes' 

{ after(grammarAccess.getClassRemovalAccess().getRemovesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassRemoval__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassRemoval__Group__1__Impl
	rule__ClassRemoval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassRemoval__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassRemovalAccess().getNameAssignment_1()); }
(rule__ClassRemoval__NameAssignment_1)
{ after(grammarAccess.getClassRemovalAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassRemoval__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassRemoval__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassRemoval__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassRemovalAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getClassRemovalAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassModification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassModification__Group__0__Impl
	rule__ClassModification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassModificationAccess().getModifiesKeyword_0()); }

	'modifies' 

{ after(grammarAccess.getClassModificationAccess().getModifiesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassModification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassModification__Group__1__Impl
	rule__ClassModification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassModificationAccess().getNameAssignment_1()); }
(rule__ClassModification__NameAssignment_1)
{ after(grammarAccess.getClassModificationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassModification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassModification__Group__2__Impl
	rule__ClassModification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassModificationAccess().getGroup_2()); }
(rule__ClassModification__Group_2__0)?
{ after(grammarAccess.getClassModificationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassModification__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassModification__Group__3__Impl
	rule__ClassModification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassModificationAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getClassModificationAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassModification__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassModification__Group__4__Impl
	rule__ClassModification__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassModificationAccess().getSubActionsAssignment_4()); }
(rule__ClassModification__SubActionsAssignment_4)*
{ after(grammarAccess.getClassModificationAccess().getSubActionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassModification__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassModification__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassModificationAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getClassModificationAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ClassModification__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassModification__Group_2__0__Impl
	rule__ClassModification__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassModificationAccess().getExtendingKeyword_2_0()); }

	'extending' 

{ after(grammarAccess.getClassModificationAccess().getExtendingKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassModification__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassModification__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassModificationAccess().getExtendsAssignment_2_1()); }
(rule__ClassModification__ExtendsAssignment_2_1)
{ after(grammarAccess.getClassModificationAccess().getExtendsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FieldAddition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldAddition__Group__0__Impl
	rule__FieldAddition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAddition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAdditionAccess().getAddsKeyword_0()); }

	'adds' 

{ after(grammarAccess.getFieldAdditionAccess().getAddsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldAddition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldAddition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAddition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAdditionAccess().getFieldAssignment_1()); }
(rule__FieldAddition__FieldAssignment_1)
{ after(grammarAccess.getFieldAdditionAccess().getFieldAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodAddition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodAddition__Group__0__Impl
	rule__MethodAddition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAddition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAdditionAccess().getAddsKeyword_0()); }

	'adds' 

{ after(grammarAccess.getMethodAdditionAccess().getAddsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodAddition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodAddition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAddition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAdditionAccess().getMethodAssignment_1()); }
(rule__MethodAddition__MethodAssignment_1)
{ after(grammarAccess.getMethodAdditionAccess().getMethodAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FieldRemoval__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldRemoval__Group__0__Impl
	rule__FieldRemoval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldRemoval__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldRemovalAccess().getRemovesFieldKeyword_0()); }

	'removesField' 

{ after(grammarAccess.getFieldRemovalAccess().getRemovesFieldKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldRemoval__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldRemoval__Group__1__Impl
	rule__FieldRemoval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldRemoval__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldRemovalAccess().getNameAssignment_1()); }
(rule__FieldRemoval__NameAssignment_1)
{ after(grammarAccess.getFieldRemovalAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldRemoval__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldRemoval__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldRemoval__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldRemovalAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getFieldRemovalAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MethodRemoval__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodRemoval__Group__0__Impl
	rule__MethodRemoval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodRemoval__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodRemovalAccess().getRemovesMethodKeyword_0()); }

	'removesMethod' 

{ after(grammarAccess.getMethodRemovalAccess().getRemovesMethodKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodRemoval__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodRemoval__Group__1__Impl
	rule__MethodRemoval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodRemoval__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodRemovalAccess().getNameAssignment_1()); }
(rule__MethodRemoval__NameAssignment_1)
{ after(grammarAccess.getMethodRemovalAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodRemoval__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodRemoval__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodRemoval__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodRemovalAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getMethodRemovalAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MethodModification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodModification__Group__0__Impl
	rule__MethodModification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodModification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodModificationAccess().getModifiesKeyword_0()); }

	'modifies' 

{ after(grammarAccess.getMethodModificationAccess().getModifiesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodModification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodModification__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodModification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodModificationAccess().getMethodAssignment_1()); }
(rule__MethodModification__MethodAssignment_1)
{ after(grammarAccess.getMethodModificationAccess().getMethodAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProductLine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductLine__Group__0__Impl
	rule__ProductLine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineAccess().getSplKeyword_0()); }

	'spl' 

{ after(grammarAccess.getProductLineAccess().getSplKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProductLine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductLine__Group__1__Impl
	rule__ProductLine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineAccess().getNameAssignment_1()); }
(rule__ProductLine__NameAssignment_1)
{ after(grammarAccess.getProductLineAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProductLine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductLine__Group__2__Impl
	rule__ProductLine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getProductLineAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProductLine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductLine__Group__3__Impl
	rule__ProductLine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineAccess().getFeaturesAssignment_3()); }
(rule__ProductLine__FeaturesAssignment_3)
{ after(grammarAccess.getProductLineAccess().getFeaturesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProductLine__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductLine__Group__4__Impl
	rule__ProductLine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLine__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineAccess().getConfigurationsAssignment_4()); }
(rule__ProductLine__ConfigurationsAssignment_4)
{ after(grammarAccess.getProductLineAccess().getConfigurationsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProductLine__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductLine__Group__5__Impl
	rule__ProductLine__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLine__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineAccess().getPartitionAssignment_5()); }
(rule__ProductLine__PartitionAssignment_5)
{ after(grammarAccess.getProductLineAccess().getPartitionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProductLine__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProductLine__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLine__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getProductLineAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Features__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Features__Group__0__Impl
	rule__Features__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Features__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturesAccess().getFeaturesKeyword_0()); }

	'features' 

{ after(grammarAccess.getFeaturesAccess().getFeaturesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Features__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Features__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Features__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturesAccess().getGroup_1()); }
(rule__Features__Group_1__0)
{ after(grammarAccess.getFeaturesAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Features__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Features__Group_1__0__Impl
	rule__Features__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Features__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturesAccess().getFeaturesListAssignment_1_0()); }
(rule__Features__FeaturesListAssignment_1_0)
{ after(grammarAccess.getFeaturesAccess().getFeaturesListAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Features__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Features__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Features__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturesAccess().getGroup_1_1()); }
(rule__Features__Group_1_1__0)*
{ after(grammarAccess.getFeaturesAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Features__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Features__Group_1_1__0__Impl
	rule__Features__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Features__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturesAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getFeaturesAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Features__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Features__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Features__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturesAccess().getFeaturesListAssignment_1_1_1()); }
(rule__Features__FeaturesListAssignment_1_1_1)
{ after(grammarAccess.getFeaturesAccess().getFeaturesListAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Configurations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Configurations__Group__0__Impl
	rule__Configurations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Configurations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationsAccess().getConfigurationsKeyword_0()); }

	'configurations' 

{ after(grammarAccess.getConfigurationsAccess().getConfigurationsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Configurations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Configurations__Group__1__Impl
	rule__Configurations__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Configurations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationsAccess().getConfigurationsAssignment_1()); }
(rule__Configurations__ConfigurationsAssignment_1)
{ after(grammarAccess.getConfigurationsAccess().getConfigurationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Configurations__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Configurations__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Configurations__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationsAccess().getGroup_2()); }
(rule__Configurations__Group_2__0)*
{ after(grammarAccess.getConfigurationsAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Configurations__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Configurations__Group_2__0__Impl
	rule__Configurations__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Configurations__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationsAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getConfigurationsAccess().getSemicolonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Configurations__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Configurations__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Configurations__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationsAccess().getConfigurationsAssignment_2_1()); }
(rule__Configurations__ConfigurationsAssignment_2_1)
{ after(grammarAccess.getConfigurationsAccess().getConfigurationsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeltaPartition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeltaPartition__Group__0__Impl
	rule__DeltaPartition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaPartition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeltaPartitionAccess().getDeltasKeyword_0()); }

	'deltas' 

{ after(grammarAccess.getDeltaPartitionAccess().getDeltasKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeltaPartition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeltaPartition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaPartition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getDeltaPartitionAccess().getPartsAssignment_1()); }
(rule__DeltaPartition__PartsAssignment_1)
{ after(grammarAccess.getDeltaPartitionAccess().getPartsAssignment_1()); }
)
(
{ before(grammarAccess.getDeltaPartitionAccess().getPartsAssignment_1()); }
(rule__DeltaPartition__PartsAssignment_1)*
{ after(grammarAccess.getDeltaPartitionAccess().getPartsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PartitionPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionPart__Group__0__Impl
	rule__PartitionPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionPart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionPartAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getPartitionPartAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionPart__Group__1__Impl
	rule__PartitionPart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionPart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionPartAccess().getModuleReferencesAssignment_1()); }
(rule__PartitionPart__ModuleReferencesAssignment_1)
{ after(grammarAccess.getPartitionPartAccess().getModuleReferencesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionPart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionPart__Group__2__Impl
	rule__PartitionPart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionPart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionPartAccess().getGroup_2()); }
(rule__PartitionPart__Group_2__0)*
{ after(grammarAccess.getPartitionPartAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionPart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionPart__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionPart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionPartAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getPartitionPartAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PartitionPart__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionPart__Group_2__0__Impl
	rule__PartitionPart__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionPart__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionPartAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getPartitionPartAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartitionPart__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartitionPart__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionPart__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionPartAccess().getModuleReferencesAssignment_2_1()); }
(rule__PartitionPart__ModuleReferencesAssignment_2_1)
{ after(grammarAccess.getPartitionPartAccess().getModuleReferencesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModuleReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleReference__Group__0__Impl
	rule__ModuleReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleReferenceAccess().getDeltaModuleAssignment_0()); }
(rule__ModuleReference__DeltaModuleAssignment_0)
{ after(grammarAccess.getModuleReferenceAccess().getDeltaModuleAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleReferenceAccess().getGroup_1()); }
(rule__ModuleReference__Group_1__0)?
{ after(grammarAccess.getModuleReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModuleReference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleReference__Group_1__0__Impl
	rule__ModuleReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleReference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleReferenceAccess().getWhenKeyword_1_0()); }

	'when' 

{ after(grammarAccess.getModuleReferenceAccess().getWhenKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleReference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleReference__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleReference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleReferenceAccess().getWhenAssignment_1_1()); }
(rule__ModuleReference__WhenAssignment_1_1)
{ after(grammarAccess.getModuleReferenceAccess().getWhenAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropositionalFormula__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropositionalFormula__Group__0__Impl
	rule__PropositionalFormula__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropositionalFormula__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropositionalFormulaAccess().getAndParserRuleCall_0()); }
	ruleAnd
{ after(grammarAccess.getPropositionalFormulaAccess().getAndParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropositionalFormula__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropositionalFormula__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropositionalFormula__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropositionalFormulaAccess().getGroup_1()); }
(rule__PropositionalFormula__Group_1__0)*
{ after(grammarAccess.getPropositionalFormulaAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropositionalFormula__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropositionalFormula__Group_1__0__Impl
	rule__PropositionalFormula__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropositionalFormula__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropositionalFormulaAccess().getOrLeftAction_1_0()); }
(

)
{ after(grammarAccess.getPropositionalFormulaAccess().getOrLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropositionalFormula__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropositionalFormula__Group_1__1__Impl
	rule__PropositionalFormula__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropositionalFormula__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropositionalFormulaAccess().getVerticalLineVerticalLineKeyword_1_1()); }

	'||' 

{ after(grammarAccess.getPropositionalFormulaAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropositionalFormula__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropositionalFormula__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropositionalFormula__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropositionalFormulaAccess().getRightAssignment_1_2()); }
(rule__PropositionalFormula__RightAssignment_1_2)
{ after(grammarAccess.getPropositionalFormulaAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__And__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
{ after(grammarAccess.getAndAccess().getPrimaryParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getGroup_1()); }
(rule__And__Group_1__0)*
{ after(grammarAccess.getAndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__And__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1()); }

	'&&' 

{ after(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
(rule__And__RightAssignment_1_2)
{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Primary__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getFeatureRefAction_0_0()); }
(

)
{ after(grammarAccess.getPrimaryAccess().getFeatureRefAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getFeatureAssignment_0_1()); }
(rule__Primary__FeatureAssignment_0_1)
{ after(grammarAccess.getPrimaryAccess().getFeatureAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Primary__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getPropParenAction_1_0()); }
(

)
{ after(grammarAccess.getPrimaryAccess().getPropParenAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_1__2__Impl
	rule__Primary__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getFormulaAssignment_1_2()); }
(rule__Primary__FormulaAssignment_1_2)
{ after(grammarAccess.getPrimaryAccess().getFormulaAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Primary__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_2__0__Impl
	rule__Primary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getNegationAction_2_0()); }
(

)
{ after(grammarAccess.getPrimaryAccess().getNegationAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_2__1__Impl
	rule__Primary__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_2_1()); }

	'!' 

{ after(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getFormulaAssignment_2_2()); }
(rule__Primary__FormulaAssignment_2_2)
{ after(grammarAccess.getPrimaryAccess().getFormulaAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Primary__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_3__0__Impl
	rule__Primary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getPropTrueAction_3_0()); }
(

)
{ after(grammarAccess.getPrimaryAccess().getPropTrueAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getTrueKeyword_3_1()); }

	'true' 

{ after(grammarAccess.getPrimaryAccess().getTrueKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Primary__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_4__0__Impl
	rule__Primary__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getPropFalseAction_4_0()); }
(

)
{ after(grammarAccess.getPrimaryAccess().getPropFalseAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getFalseKeyword_4_1()); }

	'false' 

{ after(grammarAccess.getPrimaryAccess().getFalseKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Product__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group__0__Impl
	rule__Product__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getProductKeyword_0()); }

	'product' 

{ after(grammarAccess.getProductAccess().getProductKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group__1__Impl
	rule__Product__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getNameAssignment_1()); }
(rule__Product__NameAssignment_1)
{ after(grammarAccess.getProductAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group__2__Impl
	rule__Product__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getFromKeyword_2()); }

	'from' 

{ after(grammarAccess.getProductAccess().getFromKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group__3__Impl
	rule__Product__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getProductLineAssignment_3()); }
(rule__Product__ProductLineAssignment_3)
{ after(grammarAccess.getProductAccess().getProductLineAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group__4__Impl
	rule__Product__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getProductAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group__5__Impl
	rule__Product__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getProductAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group__6__Impl
	rule__Product__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getFeaturesAssignment_6()); }
(rule__Product__FeaturesAssignment_6)
{ after(grammarAccess.getProductAccess().getFeaturesAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group__7__Impl
	rule__Product__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getGroup_7()); }
(rule__Product__Group_7__0)*
{ after(grammarAccess.getProductAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getProductAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Product__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group_7__0__Impl
	rule__Product__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getCommaKeyword_7_0()); }

	',' 

{ after(grammarAccess.getProductAccess().getCommaKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Product__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getFeaturesAssignment_7_1()); }
(rule__Product__FeaturesAssignment_7_1)
{ after(grammarAccess.getProductAccess().getFeaturesAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Program__DeltaModulesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getDeltaModulesDeltaModuleParserRuleCall_0_0()); }
	ruleDeltaModule{ after(grammarAccess.getProgramAccess().getDeltaModulesDeltaModuleParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ProductLinesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getProductLinesProductLineParserRuleCall_1_0()); }
	ruleProductLine{ after(grammarAccess.getProgramAccess().getProductLinesProductLineParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ProductsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getProductsProductParserRuleCall_2_0()); }
	ruleProduct{ after(grammarAccess.getProgramAccess().getProductsProductParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeVariable__VarNameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeVariableAccess().getVarNameTypeVariableIdParserRuleCall_0()); }
	ruleTypeVariableId{ after(grammarAccess.getTypeVariableAccess().getVarNameTypeVariableIdParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VoidType__VoidAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVoidTypeAccess().getVoidVoidKeyword_0()); }
(
{ before(grammarAccess.getVoidTypeAccess().getVoidVoidKeyword_0()); }

	'void' 

{ after(grammarAccess.getVoidTypeAccess().getVoidVoidKeyword_0()); }
)

{ after(grammarAccess.getVoidTypeAccess().getVoidVoidKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntType__BasicAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntTypeAccess().getBasicIntKeyword_0()); }
(
{ before(grammarAccess.getIntTypeAccess().getBasicIntKeyword_0()); }

	'int' 

{ after(grammarAccess.getIntTypeAccess().getBasicIntKeyword_0()); }
)

{ after(grammarAccess.getIntTypeAccess().getBasicIntKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__BasicAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanTypeAccess().getBasicBooleanKeyword_0()); }
(
{ before(grammarAccess.getBooleanTypeAccess().getBasicBooleanKeyword_0()); }

	'boolean' 

{ after(grammarAccess.getBooleanTypeAccess().getBasicBooleanKeyword_0()); }
)

{ after(grammarAccess.getBooleanTypeAccess().getBasicBooleanKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__BasicAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getBasicStringKeyword_0()); }
(
{ before(grammarAccess.getStringTypeAccess().getBasicStringKeyword_0()); }

	'String' 

{ after(grammarAccess.getStringTypeAccess().getBasicStringKeyword_0()); }
)

{ after(grammarAccess.getStringTypeAccess().getBasicStringKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassType__ClassrefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassTypeAccess().getClassrefClassNameParserRuleCall_0()); }
	ruleClassName{ after(grammarAccess.getClassTypeAccess().getClassrefClassNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ExtendsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getExtendsClassNameParserRuleCall_2_1_0()); }
	ruleClassName{ after(grammarAccess.getClassAccess().getExtendsClassNameParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__FieldsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getFieldsFieldParserRuleCall_4_0()); }
	ruleField{ after(grammarAccess.getClassAccess().getFieldsFieldParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__MethodsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getMethodsMethodParserRuleCall_5_0()); }
	ruleMethod{ after(grammarAccess.getClassAccess().getMethodsMethodParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTypeTypeForDeclarationParserRuleCall_0_0()); }
	ruleTypeForDeclaration{ after(grammarAccess.getFieldAccess().getTypeTypeForDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getTypeTypeForDeclarationParserRuleCall_0_0()); }
	ruleTypeForDeclaration{ after(grammarAccess.getLocalVariableDeclarationAccess().getTypeTypeForDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getLocalVariableDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeTypeForDeclarationParserRuleCall_0_0()); }
	ruleTypeForDeclaration{ after(grammarAccess.getParameterAccess().getTypeTypeForDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ReturntypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getReturntypeTypeForMethodParserRuleCall_0_0()); }
	ruleTypeForMethod{ after(grammarAccess.getMethodAccess().getReturntypeTypeForMethodParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParamsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_3_0_0()); }
	ruleParameter{ after(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParamsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_3_1_1_0()); }
	ruleParameter{ after(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__BodyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getBodyStatementBlockParserRuleCall_5_0()); }
	ruleStatementBlock{ after(grammarAccess.getMethodAccess().getBodyStatementBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__LocalvariablesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getLocalvariablesLocalVariableDeclarationParserRuleCall_2_0()); }
	ruleLocalVariableDeclaration{ after(grammarAccess.getStatementBlockAccess().getLocalvariablesLocalVariableDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__StatementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getStatementsStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getStatementBlockAccess().getStatementsStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__StatementsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getStatementsReturnStatementParserRuleCall_4_0()); }
	ruleReturnStatement{ after(grammarAccess.getStatementBlockAccess().getStatementsReturnStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__VerbatimAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVerbatimJAVAVERBATIMTerminalRuleCall_3_1_0()); }
	RULE_JAVAVERBATIM{ after(grammarAccess.getStatementAccess().getVerbatimJAVAVERBATIMTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLeftExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentAccess().getLeftExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentAccess().getRightExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getExpressionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getIfStatementAccess().getExpressionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ThenBlockAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getThenBlockStatementBlockParserRuleCall_5_0()); }
	ruleStatementBlock{ after(grammarAccess.getIfStatementAccess().getThenBlockStatementBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseBlockAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseBlockStatementBlockParserRuleCall_6_1_0()); }
	ruleStatementBlock{ after(grammarAccess.getIfStatementAccess().getElseBlockStatementBlockParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
	ruleMultiplication{ after(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getOpAlternatives_1_1_0()); }
(rule__Multiplication__OpAlternatives_1_1_0)
{ after(grammarAccess.getMultiplicationAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationAccess().getRightComparisonParserRuleCall_1_2_0()); }
	ruleComparison{ after(grammarAccess.getMultiplicationAccess().getRightComparisonParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
(rule__Comparison__OpAlternatives_1_1_0)
{ after(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getRightBooleanExpressionParserRuleCall_1_2_0()); }
	ruleBooleanExpression{ after(grammarAccess.getComparisonAccess().getRightBooleanExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getOpAlternatives_1_1_0()); }
(rule__BooleanExpression__OpAlternatives_1_1_0)
{ after(grammarAccess.getBooleanExpressionAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpressionAccess().getRightAtomicParserRuleCall_1_2_0()); }
	ruleAtomic{ after(grammarAccess.getBooleanExpressionAccess().getRightAtomicParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ExpressionAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getExpressionAtomicParserRuleCall_0_2_0()); }
	ruleAtomic{ after(grammarAccess.getAtomicAccess().getExpressionAtomicParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ExpressionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getExpressionAtomicParserRuleCall_1_2_0()); }
	ruleAtomic{ after(grammarAccess.getAtomicAccess().getExpressionAtomicParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__MessageAssignment_2_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getMessageMessageParserRuleCall_2_1_2_0()); }
	ruleMessage{ after(grammarAccess.getAtomicAccess().getMessageMessageParserRuleCall_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Null__NullAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullAccess().getNullNullKeyword_0()); }
(
{ before(grammarAccess.getNullAccess().getNullNullKeyword_0()); }

	'null' 

{ after(grammarAccess.getNullAccess().getNullNullKeyword_0()); }
)

{ after(grammarAccess.getNullAccess().getNullNullKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__This__VariableAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisAccess().getVariableThisKeyword_0()); }
(
{ before(grammarAccess.getThisAccess().getVariableThisKeyword_0()); }

	'this' 

{ after(grammarAccess.getThisAccess().getVariableThisKeyword_0()); }
)

{ after(grammarAccess.getThisAccess().getVariableThisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Original__MethodAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOriginalAccess().getMethodOriginalKeyword_0_0()); }
(
{ before(grammarAccess.getOriginalAccess().getMethodOriginalKeyword_0_0()); }

	'original' 

{ after(grammarAccess.getOriginalAccess().getMethodOriginalKeyword_0_0()); }
)

{ after(grammarAccess.getOriginalAccess().getMethodOriginalKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Original__ArgsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOriginalAccess().getArgsExpressionParserRuleCall_2_0_0()); }
	ruleExpression{ after(grammarAccess.getOriginalAccess().getArgsExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Original__ArgsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOriginalAccess().getArgsExpressionParserRuleCall_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getOriginalAccess().getArgsExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAccess__VariableAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccessAccess().getVariableTypedDeclarationCrossReference_0()); }
(
{ before(grammarAccess.getVariableAccessAccess().getVariableTypedDeclarationIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableAccessAccess().getVariableTypedDeclarationIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getVariableAccessAccess().getVariableTypedDeclarationCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__New__ClassAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getClassClassNameParserRuleCall_1_0()); }
	ruleClassName{ after(grammarAccess.getNewAccess().getClassClassNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getTypeClassNameParserRuleCall_1_0()); }
	ruleClassName{ after(grammarAccess.getCastAccess().getTypeClassNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__ObjectAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getObjectTerminalExpressionParserRuleCall_3_0()); }
	ruleTerminalExpression{ after(grammarAccess.getCastAccess().getObjectTerminalExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Paren__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getParenAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstant__ConstantAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConstantAccess().getConstantSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringConstantAccess().getConstantSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntConstant__ConstantAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstantAccess().getConstantINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntConstantAccess().getConstantINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoolConstant__ConstantAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolConstantAccess().getConstantAlternatives_0()); }
(rule__BoolConstant__ConstantAlternatives_0)
{ after(grammarAccess.getBoolConstantAccess().getConstantAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__MethodAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getMethodIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getMethodCallAccess().getMethodIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__ArgsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getArgsExpressionParserRuleCall_2_0_0()); }
	ruleExpression{ after(grammarAccess.getMethodCallAccess().getArgsExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__ArgsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getArgsExpressionParserRuleCall_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getMethodCallAccess().getArgsExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelection__FieldAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSelectionAccess().getFieldIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getFieldSelectionAccess().getFieldIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaModule__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeltaModuleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDeltaModuleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaModule__DeltaActionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeltaModuleAccess().getDeltaActionsDeltaActionParserRuleCall_3_0()); }
	ruleDeltaAction{ after(grammarAccess.getDeltaModuleAccess().getDeltaActionsDeltaActionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAddition__ClassAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAdditionAccess().getClassClassParserRuleCall_1_0()); }
	ruleClass{ after(grammarAccess.getClassAdditionAccess().getClassClassParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassRemoval__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassRemovalAccess().getNameClassNameParserRuleCall_1_0()); }
	ruleClassName{ after(grammarAccess.getClassRemovalAccess().getNameClassNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassModificationAccess().getNameClassNameParserRuleCall_1_0()); }
	ruleClassName{ after(grammarAccess.getClassModificationAccess().getNameClassNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__ExtendsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassModificationAccess().getExtendsClassNameParserRuleCall_2_1_0()); }
	ruleClassName{ after(grammarAccess.getClassModificationAccess().getExtendsClassNameParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__SubActionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassModificationAccess().getSubActionsDeltaSubActionParserRuleCall_4_0()); }
	ruleDeltaSubAction{ after(grammarAccess.getClassModificationAccess().getSubActionsDeltaSubActionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAddition__FieldAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAdditionAccess().getFieldFieldParserRuleCall_1_0()); }
	ruleField{ after(grammarAccess.getFieldAdditionAccess().getFieldFieldParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodAddition__MethodAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAdditionAccess().getMethodMethodParserRuleCall_1_0()); }
	ruleMethod{ after(grammarAccess.getMethodAdditionAccess().getMethodMethodParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldRemoval__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldRemovalAccess().getNameFieldNameParserRuleCall_1_0()); }
	ruleFieldName{ after(grammarAccess.getFieldRemovalAccess().getNameFieldNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodRemoval__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodRemovalAccess().getNameMethodNameParserRuleCall_1_0()); }
	ruleMethodName{ after(grammarAccess.getMethodRemovalAccess().getNameMethodNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodModification__MethodAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodModificationAccess().getMethodMethodParserRuleCall_1_0()); }
	ruleMethod{ after(grammarAccess.getMethodModificationAccess().getMethodMethodParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLine__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getProductLineAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLine__FeaturesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineAccess().getFeaturesFeaturesParserRuleCall_3_0()); }
	ruleFeatures{ after(grammarAccess.getProductLineAccess().getFeaturesFeaturesParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLine__ConfigurationsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineAccess().getConfigurationsConfigurationsParserRuleCall_4_0()); }
	ruleConfigurations{ after(grammarAccess.getProductLineAccess().getConfigurationsConfigurationsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProductLine__PartitionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductLineAccess().getPartitionDeltaPartitionParserRuleCall_5_0()); }
	ruleDeltaPartition{ after(grammarAccess.getProductLineAccess().getPartitionDeltaPartitionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Features__FeaturesListAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturesAccess().getFeaturesListFeatureParserRuleCall_1_0_0()); }
	ruleFeature{ after(grammarAccess.getFeaturesAccess().getFeaturesListFeatureParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Features__FeaturesListAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturesAccess().getFeaturesListFeatureParserRuleCall_1_1_1_0()); }
	ruleFeature{ after(grammarAccess.getFeaturesAccess().getFeaturesListFeatureParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Configurations__ConfigurationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationsAccess().getConfigurationsConfigurationParserRuleCall_1_0()); }
	ruleConfiguration{ after(grammarAccess.getConfigurationsAccess().getConfigurationsConfigurationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Configurations__ConfigurationsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationsAccess().getConfigurationsConfigurationParserRuleCall_2_1_0()); }
	ruleConfiguration{ after(grammarAccess.getConfigurationsAccess().getConfigurationsConfigurationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__FormulaAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationAccess().getFormulaPropositionalFormulaParserRuleCall_0()); }
	rulePropositionalFormula{ after(grammarAccess.getConfigurationAccess().getFormulaPropositionalFormulaParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeltaPartition__PartsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeltaPartitionAccess().getPartsPartitionPartParserRuleCall_1_0()); }
	rulePartitionPart{ after(grammarAccess.getDeltaPartitionAccess().getPartsPartitionPartParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionPart__ModuleReferencesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionPartAccess().getModuleReferencesModuleReferenceParserRuleCall_1_0()); }
	ruleModuleReference{ after(grammarAccess.getPartitionPartAccess().getModuleReferencesModuleReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartitionPart__ModuleReferencesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartitionPartAccess().getModuleReferencesModuleReferenceParserRuleCall_2_1_0()); }
	ruleModuleReference{ after(grammarAccess.getPartitionPartAccess().getModuleReferencesModuleReferenceParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleReference__DeltaModuleAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleReferenceAccess().getDeltaModuleDeltaModuleCrossReference_0_0()); }
(
{ before(grammarAccess.getModuleReferenceAccess().getDeltaModuleDeltaModuleIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getModuleReferenceAccess().getDeltaModuleDeltaModuleIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getModuleReferenceAccess().getDeltaModuleDeltaModuleCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleReference__WhenAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleReferenceAccess().getWhenPropositionalFormulaParserRuleCall_1_1_0()); }
	rulePropositionalFormula{ after(grammarAccess.getModuleReferenceAccess().getWhenPropositionalFormulaParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropositionalFormula__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropositionalFormulaAccess().getRightAndParserRuleCall_1_2_0()); }
	ruleAnd{ after(grammarAccess.getPropositionalFormulaAccess().getRightAndParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	rulePrimary{ after(grammarAccess.getAndAccess().getRightPrimaryParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__FeatureAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getFeatureFeatureCrossReference_0_1_0()); }
(
{ before(grammarAccess.getPrimaryAccess().getFeatureFeatureIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getPrimaryAccess().getFeatureFeatureIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getPrimaryAccess().getFeatureFeatureCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__FormulaAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getFormulaPropositionalFormulaParserRuleCall_1_2_0()); }
	rulePropositionalFormula{ after(grammarAccess.getPrimaryAccess().getFormulaPropositionalFormulaParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__FormulaAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getFormulaPrimaryParserRuleCall_2_2_0()); }
	rulePrimary{ after(grammarAccess.getPrimaryAccess().getFormulaPrimaryParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Product__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getProductAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Product__ProductLineAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getProductLineProductLineCrossReference_3_0()); }
(
{ before(grammarAccess.getProductAccess().getProductLineProductLineIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getProductAccess().getProductLineProductLineIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getProductAccess().getProductLineProductLineCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Product__FeaturesAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getFeaturesFeatureCrossReference_6_0()); }
(
{ before(grammarAccess.getProductAccess().getFeaturesFeatureIDTerminalRuleCall_6_0_1()); }
	RULE_ID{ after(grammarAccess.getProductAccess().getFeaturesFeatureIDTerminalRuleCall_6_0_1()); }
)
{ after(grammarAccess.getProductAccess().getFeaturesFeatureCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Product__FeaturesAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProductAccess().getFeaturesFeatureCrossReference_7_1_0()); }
(
{ before(grammarAccess.getProductAccess().getFeaturesFeatureIDTerminalRuleCall_7_1_0_1()); }
	RULE_ID{ after(grammarAccess.getProductAccess().getFeaturesFeatureIDTerminalRuleCall_7_1_0_1()); }
)
{ after(grammarAccess.getProductAccess().getFeaturesFeatureCrossReference_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_JAVAVERBATIM : '**Java:' ( options {greedy=false;} : . )*':Java**';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


