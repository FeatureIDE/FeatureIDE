/*
* generated by Xtext
*/
package org.deltaj.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.deltaj.services.DeltaJGrammarAccess;

public class DeltaJParser extends AbstractContentAssistParser {
	
	@Inject
	private DeltaJGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.deltaj.ui.contentassist.antlr.internal.InternalDeltaJParser createParser() {
		org.deltaj.ui.contentassist.antlr.internal.InternalDeltaJParser result = new org.deltaj.ui.contentassist.antlr.internal.InternalDeltaJParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getTypeForMethodAccess().getAlternatives(), "rule__TypeForMethod__Alternatives");
					put(grammarAccess.getTypeForDeclarationAccess().getAlternatives(), "rule__TypeForDeclaration__Alternatives");
					put(grammarAccess.getBasicTypeAccess().getAlternatives(), "rule__BasicType__Alternatives");
					put(grammarAccess.getTypedDeclarationAccess().getAlternatives(), "rule__TypedDeclaration__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getAdditionAccess().getAlternatives_1_0(), "rule__Addition__Alternatives_1_0");
					put(grammarAccess.getMultiplicationAccess().getOpAlternatives_1_1_0(), "rule__Multiplication__OpAlternatives_1_1_0");
					put(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0(), "rule__Comparison__OpAlternatives_1_1_0");
					put(grammarAccess.getBooleanExpressionAccess().getOpAlternatives_1_1_0(), "rule__BooleanExpression__OpAlternatives_1_1_0");
					put(grammarAccess.getAtomicAccess().getAlternatives(), "rule__Atomic__Alternatives");
					put(grammarAccess.getTerminalExpressionAccess().getAlternatives(), "rule__TerminalExpression__Alternatives");
					put(grammarAccess.getConstantAccess().getAlternatives(), "rule__Constant__Alternatives");
					put(grammarAccess.getBoolConstantAccess().getConstantAlternatives_0(), "rule__BoolConstant__ConstantAlternatives_0");
					put(grammarAccess.getMessageAccess().getAlternatives(), "rule__Message__Alternatives");
					put(grammarAccess.getDeltaActionAccess().getAlternatives(), "rule__DeltaAction__Alternatives");
					put(grammarAccess.getRemovesOrModifiesClassAccess().getAlternatives(), "rule__RemovesOrModifiesClass__Alternatives");
					put(grammarAccess.getDeltaSubActionAccess().getAlternatives(), "rule__DeltaSubAction__Alternatives");
					put(grammarAccess.getMethodOrFieldAdditionAccess().getAlternatives(), "rule__MethodOrFieldAddition__Alternatives");
					put(grammarAccess.getPrimaryAccess().getAlternatives(), "rule__Primary__Alternatives");
					put(grammarAccess.getProgramAccess().getGroup(), "rule__Program__Group__0");
					put(grammarAccess.getTypeVariableIdAccess().getGroup(), "rule__TypeVariableId__Group__0");
					put(grammarAccess.getClassAccess().getGroup(), "rule__Class__Group__0");
					put(grammarAccess.getClassAccess().getGroup_2(), "rule__Class__Group_2__0");
					put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
					put(grammarAccess.getLocalVariableDeclarationAccess().getGroup(), "rule__LocalVariableDeclaration__Group__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getMethodAccess().getGroup(), "rule__Method__Group__0");
					put(grammarAccess.getMethodAccess().getGroup_3(), "rule__Method__Group_3__0");
					put(grammarAccess.getMethodAccess().getGroup_3_1(), "rule__Method__Group_3_1__0");
					put(grammarAccess.getStatementBlockAccess().getGroup(), "rule__StatementBlock__Group__0");
					put(grammarAccess.getReturnStatementAccess().getGroup(), "rule__ReturnStatement__Group__0");
					put(grammarAccess.getStatementAccess().getGroup_3(), "rule__Statement__Group_3__0");
					put(grammarAccess.getExpressionStatementAccess().getGroup(), "rule__ExpressionStatement__Group__0");
					put(grammarAccess.getAssignmentAccess().getGroup(), "rule__Assignment__Group__0");
					put(grammarAccess.getIfStatementAccess().getGroup(), "rule__IfStatement__Group__0");
					put(grammarAccess.getIfStatementAccess().getGroup_6(), "rule__IfStatement__Group_6__0");
					put(grammarAccess.getAdditionAccess().getGroup(), "rule__Addition__Group__0");
					put(grammarAccess.getAdditionAccess().getGroup_1(), "rule__Addition__Group_1__0");
					put(grammarAccess.getAdditionAccess().getGroup_1_0_0(), "rule__Addition__Group_1_0_0__0");
					put(grammarAccess.getAdditionAccess().getGroup_1_0_1(), "rule__Addition__Group_1_0_1__0");
					put(grammarAccess.getMultiplicationAccess().getGroup(), "rule__Multiplication__Group__0");
					put(grammarAccess.getMultiplicationAccess().getGroup_1(), "rule__Multiplication__Group_1__0");
					put(grammarAccess.getComparisonAccess().getGroup(), "rule__Comparison__Group__0");
					put(grammarAccess.getComparisonAccess().getGroup_1(), "rule__Comparison__Group_1__0");
					put(grammarAccess.getBooleanExpressionAccess().getGroup(), "rule__BooleanExpression__Group__0");
					put(grammarAccess.getBooleanExpressionAccess().getGroup_1(), "rule__BooleanExpression__Group_1__0");
					put(grammarAccess.getAtomicAccess().getGroup_0(), "rule__Atomic__Group_0__0");
					put(grammarAccess.getAtomicAccess().getGroup_1(), "rule__Atomic__Group_1__0");
					put(grammarAccess.getAtomicAccess().getGroup_2(), "rule__Atomic__Group_2__0");
					put(grammarAccess.getAtomicAccess().getGroup_2_1(), "rule__Atomic__Group_2_1__0");
					put(grammarAccess.getOriginalAccess().getGroup(), "rule__Original__Group__0");
					put(grammarAccess.getOriginalAccess().getGroup_2(), "rule__Original__Group_2__0");
					put(grammarAccess.getOriginalAccess().getGroup_2_1(), "rule__Original__Group_2_1__0");
					put(grammarAccess.getNewAccess().getGroup(), "rule__New__Group__0");
					put(grammarAccess.getCastAccess().getGroup(), "rule__Cast__Group__0");
					put(grammarAccess.getParenAccess().getGroup(), "rule__Paren__Group__0");
					put(grammarAccess.getMethodCallAccess().getGroup(), "rule__MethodCall__Group__0");
					put(grammarAccess.getMethodCallAccess().getGroup_2(), "rule__MethodCall__Group_2__0");
					put(grammarAccess.getMethodCallAccess().getGroup_2_1(), "rule__MethodCall__Group_2_1__0");
					put(grammarAccess.getDeltaModuleAccess().getGroup(), "rule__DeltaModule__Group__0");
					put(grammarAccess.getClassAdditionAccess().getGroup(), "rule__ClassAddition__Group__0");
					put(grammarAccess.getClassRemovalAccess().getGroup(), "rule__ClassRemoval__Group__0");
					put(grammarAccess.getClassModificationAccess().getGroup(), "rule__ClassModification__Group__0");
					put(grammarAccess.getClassModificationAccess().getGroup_2(), "rule__ClassModification__Group_2__0");
					put(grammarAccess.getFieldAdditionAccess().getGroup(), "rule__FieldAddition__Group__0");
					put(grammarAccess.getMethodAdditionAccess().getGroup(), "rule__MethodAddition__Group__0");
					put(grammarAccess.getFieldRemovalAccess().getGroup(), "rule__FieldRemoval__Group__0");
					put(grammarAccess.getMethodRemovalAccess().getGroup(), "rule__MethodRemoval__Group__0");
					put(grammarAccess.getMethodModificationAccess().getGroup(), "rule__MethodModification__Group__0");
					put(grammarAccess.getProductLineAccess().getGroup(), "rule__ProductLine__Group__0");
					put(grammarAccess.getFeaturesAccess().getGroup(), "rule__Features__Group__0");
					put(grammarAccess.getFeaturesAccess().getGroup_1(), "rule__Features__Group_1__0");
					put(grammarAccess.getFeaturesAccess().getGroup_1_1(), "rule__Features__Group_1_1__0");
					put(grammarAccess.getConfigurationsAccess().getGroup(), "rule__Configurations__Group__0");
					put(grammarAccess.getConfigurationsAccess().getGroup_2(), "rule__Configurations__Group_2__0");
					put(grammarAccess.getDeltaPartitionAccess().getGroup(), "rule__DeltaPartition__Group__0");
					put(grammarAccess.getPartitionPartAccess().getGroup(), "rule__PartitionPart__Group__0");
					put(grammarAccess.getPartitionPartAccess().getGroup_2(), "rule__PartitionPart__Group_2__0");
					put(grammarAccess.getModuleReferenceAccess().getGroup(), "rule__ModuleReference__Group__0");
					put(grammarAccess.getModuleReferenceAccess().getGroup_1(), "rule__ModuleReference__Group_1__0");
					put(grammarAccess.getPropositionalFormulaAccess().getGroup(), "rule__PropositionalFormula__Group__0");
					put(grammarAccess.getPropositionalFormulaAccess().getGroup_1(), "rule__PropositionalFormula__Group_1__0");
					put(grammarAccess.getAndAccess().getGroup(), "rule__And__Group__0");
					put(grammarAccess.getAndAccess().getGroup_1(), "rule__And__Group_1__0");
					put(grammarAccess.getPrimaryAccess().getGroup_0(), "rule__Primary__Group_0__0");
					put(grammarAccess.getPrimaryAccess().getGroup_1(), "rule__Primary__Group_1__0");
					put(grammarAccess.getPrimaryAccess().getGroup_2(), "rule__Primary__Group_2__0");
					put(grammarAccess.getPrimaryAccess().getGroup_3(), "rule__Primary__Group_3__0");
					put(grammarAccess.getPrimaryAccess().getGroup_4(), "rule__Primary__Group_4__0");
					put(grammarAccess.getProductAccess().getGroup(), "rule__Product__Group__0");
					put(grammarAccess.getProductAccess().getGroup_7(), "rule__Product__Group_7__0");
					put(grammarAccess.getProgramAccess().getDeltaModulesAssignment_0(), "rule__Program__DeltaModulesAssignment_0");
					put(grammarAccess.getProgramAccess().getProductLinesAssignment_1(), "rule__Program__ProductLinesAssignment_1");
					put(grammarAccess.getProgramAccess().getProductsAssignment_2(), "rule__Program__ProductsAssignment_2");
					put(grammarAccess.getTypeVariableAccess().getVarNameAssignment(), "rule__TypeVariable__VarNameAssignment");
					put(grammarAccess.getVoidTypeAccess().getVoidAssignment(), "rule__VoidType__VoidAssignment");
					put(grammarAccess.getIntTypeAccess().getBasicAssignment(), "rule__IntType__BasicAssignment");
					put(grammarAccess.getBooleanTypeAccess().getBasicAssignment(), "rule__BooleanType__BasicAssignment");
					put(grammarAccess.getStringTypeAccess().getBasicAssignment(), "rule__StringType__BasicAssignment");
					put(grammarAccess.getClassTypeAccess().getClassrefAssignment(), "rule__ClassType__ClassrefAssignment");
					put(grammarAccess.getClassAccess().getNameAssignment_1(), "rule__Class__NameAssignment_1");
					put(grammarAccess.getClassAccess().getExtendsAssignment_2_1(), "rule__Class__ExtendsAssignment_2_1");
					put(grammarAccess.getClassAccess().getFieldsAssignment_4(), "rule__Class__FieldsAssignment_4");
					put(grammarAccess.getClassAccess().getMethodsAssignment_5(), "rule__Class__MethodsAssignment_5");
					put(grammarAccess.getFieldAccess().getTypeAssignment_0(), "rule__Field__TypeAssignment_0");
					put(grammarAccess.getFieldAccess().getNameAssignment_1(), "rule__Field__NameAssignment_1");
					put(grammarAccess.getLocalVariableDeclarationAccess().getTypeAssignment_0(), "rule__LocalVariableDeclaration__TypeAssignment_0");
					put(grammarAccess.getLocalVariableDeclarationAccess().getNameAssignment_1(), "rule__LocalVariableDeclaration__NameAssignment_1");
					put(grammarAccess.getParameterAccess().getTypeAssignment_0(), "rule__Parameter__TypeAssignment_0");
					put(grammarAccess.getParameterAccess().getNameAssignment_1(), "rule__Parameter__NameAssignment_1");
					put(grammarAccess.getMethodAccess().getReturntypeAssignment_0(), "rule__Method__ReturntypeAssignment_0");
					put(grammarAccess.getMethodAccess().getNameAssignment_1(), "rule__Method__NameAssignment_1");
					put(grammarAccess.getMethodAccess().getParamsAssignment_3_0(), "rule__Method__ParamsAssignment_3_0");
					put(grammarAccess.getMethodAccess().getParamsAssignment_3_1_1(), "rule__Method__ParamsAssignment_3_1_1");
					put(grammarAccess.getMethodAccess().getBodyAssignment_5(), "rule__Method__BodyAssignment_5");
					put(grammarAccess.getStatementBlockAccess().getLocalvariablesAssignment_2(), "rule__StatementBlock__LocalvariablesAssignment_2");
					put(grammarAccess.getStatementBlockAccess().getStatementsAssignment_3(), "rule__StatementBlock__StatementsAssignment_3");
					put(grammarAccess.getStatementBlockAccess().getStatementsAssignment_4(), "rule__StatementBlock__StatementsAssignment_4");
					put(grammarAccess.getReturnStatementAccess().getExpressionAssignment_2(), "rule__ReturnStatement__ExpressionAssignment_2");
					put(grammarAccess.getStatementAccess().getVerbatimAssignment_3_1(), "rule__Statement__VerbatimAssignment_3_1");
					put(grammarAccess.getExpressionStatementAccess().getExpressionAssignment_0(), "rule__ExpressionStatement__ExpressionAssignment_0");
					put(grammarAccess.getAssignmentAccess().getLeftAssignment_0(), "rule__Assignment__LeftAssignment_0");
					put(grammarAccess.getAssignmentAccess().getRightAssignment_2(), "rule__Assignment__RightAssignment_2");
					put(grammarAccess.getIfStatementAccess().getExpressionAssignment_3(), "rule__IfStatement__ExpressionAssignment_3");
					put(grammarAccess.getIfStatementAccess().getThenBlockAssignment_5(), "rule__IfStatement__ThenBlockAssignment_5");
					put(grammarAccess.getIfStatementAccess().getElseBlockAssignment_6_1(), "rule__IfStatement__ElseBlockAssignment_6_1");
					put(grammarAccess.getAdditionAccess().getRightAssignment_1_1(), "rule__Addition__RightAssignment_1_1");
					put(grammarAccess.getMultiplicationAccess().getOpAssignment_1_1(), "rule__Multiplication__OpAssignment_1_1");
					put(grammarAccess.getMultiplicationAccess().getRightAssignment_1_2(), "rule__Multiplication__RightAssignment_1_2");
					put(grammarAccess.getComparisonAccess().getOpAssignment_1_1(), "rule__Comparison__OpAssignment_1_1");
					put(grammarAccess.getComparisonAccess().getRightAssignment_1_2(), "rule__Comparison__RightAssignment_1_2");
					put(grammarAccess.getBooleanExpressionAccess().getOpAssignment_1_1(), "rule__BooleanExpression__OpAssignment_1_1");
					put(grammarAccess.getBooleanExpressionAccess().getRightAssignment_1_2(), "rule__BooleanExpression__RightAssignment_1_2");
					put(grammarAccess.getAtomicAccess().getExpressionAssignment_0_2(), "rule__Atomic__ExpressionAssignment_0_2");
					put(grammarAccess.getAtomicAccess().getExpressionAssignment_1_2(), "rule__Atomic__ExpressionAssignment_1_2");
					put(grammarAccess.getAtomicAccess().getMessageAssignment_2_1_2(), "rule__Atomic__MessageAssignment_2_1_2");
					put(grammarAccess.getNullAccess().getNullAssignment(), "rule__Null__NullAssignment");
					put(grammarAccess.getThisAccess().getVariableAssignment(), "rule__This__VariableAssignment");
					put(grammarAccess.getOriginalAccess().getMethodAssignment_0(), "rule__Original__MethodAssignment_0");
					put(grammarAccess.getOriginalAccess().getArgsAssignment_2_0(), "rule__Original__ArgsAssignment_2_0");
					put(grammarAccess.getOriginalAccess().getArgsAssignment_2_1_1(), "rule__Original__ArgsAssignment_2_1_1");
					put(grammarAccess.getVariableAccessAccess().getVariableAssignment(), "rule__VariableAccess__VariableAssignment");
					put(grammarAccess.getNewAccess().getClassAssignment_1(), "rule__New__ClassAssignment_1");
					put(grammarAccess.getCastAccess().getTypeAssignment_1(), "rule__Cast__TypeAssignment_1");
					put(grammarAccess.getCastAccess().getObjectAssignment_3(), "rule__Cast__ObjectAssignment_3");
					put(grammarAccess.getParenAccess().getExpressionAssignment_1(), "rule__Paren__ExpressionAssignment_1");
					put(grammarAccess.getStringConstantAccess().getConstantAssignment(), "rule__StringConstant__ConstantAssignment");
					put(grammarAccess.getIntConstantAccess().getConstantAssignment(), "rule__IntConstant__ConstantAssignment");
					put(grammarAccess.getBoolConstantAccess().getConstantAssignment(), "rule__BoolConstant__ConstantAssignment");
					put(grammarAccess.getMethodCallAccess().getMethodAssignment_0(), "rule__MethodCall__MethodAssignment_0");
					put(grammarAccess.getMethodCallAccess().getArgsAssignment_2_0(), "rule__MethodCall__ArgsAssignment_2_0");
					put(grammarAccess.getMethodCallAccess().getArgsAssignment_2_1_1(), "rule__MethodCall__ArgsAssignment_2_1_1");
					put(grammarAccess.getFieldSelectionAccess().getFieldAssignment(), "rule__FieldSelection__FieldAssignment");
					put(grammarAccess.getDeltaModuleAccess().getNameAssignment_1(), "rule__DeltaModule__NameAssignment_1");
					put(grammarAccess.getDeltaModuleAccess().getDeltaActionsAssignment_3(), "rule__DeltaModule__DeltaActionsAssignment_3");
					put(grammarAccess.getClassAdditionAccess().getClassAssignment_1(), "rule__ClassAddition__ClassAssignment_1");
					put(grammarAccess.getClassRemovalAccess().getNameAssignment_1(), "rule__ClassRemoval__NameAssignment_1");
					put(grammarAccess.getClassModificationAccess().getNameAssignment_1(), "rule__ClassModification__NameAssignment_1");
					put(grammarAccess.getClassModificationAccess().getExtendsAssignment_2_1(), "rule__ClassModification__ExtendsAssignment_2_1");
					put(grammarAccess.getClassModificationAccess().getSubActionsAssignment_4(), "rule__ClassModification__SubActionsAssignment_4");
					put(grammarAccess.getFieldAdditionAccess().getFieldAssignment_1(), "rule__FieldAddition__FieldAssignment_1");
					put(grammarAccess.getMethodAdditionAccess().getMethodAssignment_1(), "rule__MethodAddition__MethodAssignment_1");
					put(grammarAccess.getFieldRemovalAccess().getNameAssignment_1(), "rule__FieldRemoval__NameAssignment_1");
					put(grammarAccess.getMethodRemovalAccess().getNameAssignment_1(), "rule__MethodRemoval__NameAssignment_1");
					put(grammarAccess.getMethodModificationAccess().getMethodAssignment_1(), "rule__MethodModification__MethodAssignment_1");
					put(grammarAccess.getProductLineAccess().getNameAssignment_1(), "rule__ProductLine__NameAssignment_1");
					put(grammarAccess.getProductLineAccess().getFeaturesAssignment_3(), "rule__ProductLine__FeaturesAssignment_3");
					put(grammarAccess.getProductLineAccess().getConfigurationsAssignment_4(), "rule__ProductLine__ConfigurationsAssignment_4");
					put(grammarAccess.getProductLineAccess().getPartitionAssignment_5(), "rule__ProductLine__PartitionAssignment_5");
					put(grammarAccess.getFeaturesAccess().getFeaturesListAssignment_1_0(), "rule__Features__FeaturesListAssignment_1_0");
					put(grammarAccess.getFeaturesAccess().getFeaturesListAssignment_1_1_1(), "rule__Features__FeaturesListAssignment_1_1_1");
					put(grammarAccess.getFeatureAccess().getNameAssignment(), "rule__Feature__NameAssignment");
					put(grammarAccess.getConfigurationsAccess().getConfigurationsAssignment_1(), "rule__Configurations__ConfigurationsAssignment_1");
					put(grammarAccess.getConfigurationsAccess().getConfigurationsAssignment_2_1(), "rule__Configurations__ConfigurationsAssignment_2_1");
					put(grammarAccess.getConfigurationAccess().getFormulaAssignment(), "rule__Configuration__FormulaAssignment");
					put(grammarAccess.getDeltaPartitionAccess().getPartsAssignment_1(), "rule__DeltaPartition__PartsAssignment_1");
					put(grammarAccess.getPartitionPartAccess().getModuleReferencesAssignment_1(), "rule__PartitionPart__ModuleReferencesAssignment_1");
					put(grammarAccess.getPartitionPartAccess().getModuleReferencesAssignment_2_1(), "rule__PartitionPart__ModuleReferencesAssignment_2_1");
					put(grammarAccess.getModuleReferenceAccess().getDeltaModuleAssignment_0(), "rule__ModuleReference__DeltaModuleAssignment_0");
					put(grammarAccess.getModuleReferenceAccess().getWhenAssignment_1_1(), "rule__ModuleReference__WhenAssignment_1_1");
					put(grammarAccess.getPropositionalFormulaAccess().getRightAssignment_1_2(), "rule__PropositionalFormula__RightAssignment_1_2");
					put(grammarAccess.getAndAccess().getRightAssignment_1_2(), "rule__And__RightAssignment_1_2");
					put(grammarAccess.getPrimaryAccess().getFeatureAssignment_0_1(), "rule__Primary__FeatureAssignment_0_1");
					put(grammarAccess.getPrimaryAccess().getFormulaAssignment_1_2(), "rule__Primary__FormulaAssignment_1_2");
					put(grammarAccess.getPrimaryAccess().getFormulaAssignment_2_2(), "rule__Primary__FormulaAssignment_2_2");
					put(grammarAccess.getProductAccess().getNameAssignment_1(), "rule__Product__NameAssignment_1");
					put(grammarAccess.getProductAccess().getProductLineAssignment_3(), "rule__Product__ProductLineAssignment_3");
					put(grammarAccess.getProductAccess().getFeaturesAssignment_6(), "rule__Product__FeaturesAssignment_6");
					put(grammarAccess.getProductAccess().getFeaturesAssignment_7_1(), "rule__Product__FeaturesAssignment_7_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.deltaj.ui.contentassist.antlr.internal.InternalDeltaJParser typedParser = (org.deltaj.ui.contentassist.antlr.internal.InternalDeltaJParser) parser;
			typedParser.entryRuleProgram();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public DeltaJGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DeltaJGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
